{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/strict/source/img/white-2.jpg","path":"img/white-2.jpg","modified":0},{"_id":"themes/strict/source/img/love-2.jpg","path":"img/love-2.jpg","modified":0},{"_id":"themes/strict/source/img/bg.jpg","path":"img/bg.jpg","modified":0},{"_id":"themes/strict/source/fonts/icon.woff","path":"fonts/icon.woff","modified":0},{"_id":"themes/strict/source/fonts/icon.ttf","path":"fonts/icon.ttf","modified":0},{"_id":"themes/strict/source/fonts/icon.svg","path":"fonts/icon.svg","modified":0},{"_id":"themes/strict/source/fonts/icon.eot","path":"fonts/icon.eot","modified":0},{"_id":"themes/strict/source/css/main.styl","path":"css/main.styl","modified":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0}],"Cache":[{"_id":"source/404.html","shasum":"a4cbbe31bc83332167c22d0c80c8c3311cbb80ed","modified":1446889247180},{"_id":"source/_drafts/backbone-in-action.md","shasum":"4bbe3e4155bb92a17c5cecbfedc864b0cc2fac08","modified":1448799667750},{"_id":"source/_drafts/backbone-router-and-view.md","shasum":"1655d98f8e3df18ed889a5ac5f36eab8bdd82ce8","modified":1456156121077},{"_id":"source/_drafts/git-in-action.md","shasum":"83eedd4548d7130de2810124fc771f92cd57dc3c","modified":1448854389314},{"_id":"source/_drafts/hexo-in-action.md","shasum":"6f9416596207100ff0384dcbe4141809e99dd9b7","modified":1448799702434},{"_id":"source/_drafts/underscore-in-action.md","shasum":"25359a7e76794c5853ab6918bcf278b893d99b85","modified":1448799699100},{"_id":"source/_drafts/use-correct-way-to-change-view.md","shasum":"11fdca91eed40e197c02712c28bf4c164b415f79","modified":1456156121076},{"_id":"source/_posts/baseview-in-backbone.md","shasum":"f885428706520ccabcdcb3a1d13205bc82106330","modified":1448593128000},{"_id":"source/_posts/battleship-girls.md","shasum":"aeb580507ad00d539ab6c57aa5f2ae5e3474b8b3","modified":1456157736293},{"_id":"source/_posts/git-remember-password-in-window-and-linux.md","shasum":"da56f267e60aeb2c4e08485d6c8c40cd21f4bde8","modified":1448593114000},{"_id":"source/_posts/modify-wamp-mysql-password.md","shasum":"e6e021d2977ef4b1457da09032fe4ae0200266fb","modified":1448247565158},{"_id":"source/_posts/navicat-10-1-7-key.md","shasum":"658b481b8d975386ef75f6b7c31f103f453e8617","modified":1448247013501},{"_id":"source/_posts/protect-yourself-in-network.md","shasum":"5b0a2bf7ef90bc59deea95abe44d1491122530a8","modified":1448248150684},{"_id":"source/_posts/show-a-default-image-when-the-image-is-broken.md","shasum":"ea73292a6b4653ae80d2fc3e8ccbe7ca9eb4033a","modified":1448799487240},{"_id":"source/_posts/use-js-to-convert-ts-to-data.md","shasum":"abe03817c6aa6f8831e344f9ac7c4409fd3a8a80","modified":1456156121028},{"_id":"source/_posts/wamp-mysql-chinese-question-mark.md","shasum":"946a7f6656990ded7ecb1125b487e1b074adbce3","modified":1448247631083},{"_id":"source/_posts/write-a-compatible-js-module.md","shasum":"24853a140ea4ff416b604e07da5bc12368affee4","modified":1450253008385},{"_id":"source/_posts/wrong-clearfix-make-me-crazy.md","shasum":"3eed8e319b68488d45f5a3c8aff6d7c205c11b18","modified":1448593147000},{"_id":"source/about/index.md","shasum":"186904652c5c278d19a3cfb9418b09ea1a4ab927","modified":1446889189111},{"_id":"source/categories/index.md","shasum":"ba3a1a01177f3302e0ee582f12ae632b7ea7863b","modified":1446889001842},{"_id":"source/favicon.ico","shasum":"c0159d635085448ccc0aa746d03b48469bffb12c","modified":1451800059799},{"_id":"source/tags/index.md","shasum":"4445c40ee0b358068f699f63a6af8910313eec13","modified":1446888951367},{"_id":"themes/strict/LICENSE","shasum":"a8dbe5ba31ca0e72adcb65520674dc97c25bd970","modified":1452522632548},{"_id":"themes/strict/README.md","shasum":"1fdf5571c052e9e353ca88d9e6c9b2f15167a3c5","modified":1452522632551},{"_id":"themes/strict/_config.yml","shasum":"3b6bdad6cdbdfc52d3dc132dd356e8e6654b7b87","modified":1456156121032},{"_id":"themes/strict/layout/_views/foot.jade","shasum":"9f2c2161e09f24de20f260c5b940a046d9913d48","modified":1452522632558},{"_id":"themes/strict/layout/_views/head.jade","shasum":"34ac1e61e656c7592c5a6ce382a24c488ee95253","modified":1456156121040},{"_id":"themes/strict/layout/_views/main.jade","shasum":"43ed3908192bdfabde71fd5e42ff850af47d6608","modified":1452522632567},{"_id":"themes/strict/layout/_views/menu.jade","shasum":"01f665bd67c4855f0b2d7a0bf1a9eac84479f59f","modified":1452522632570},{"_id":"themes/strict/layout/_views/nav.jade","shasum":"f346ed3af6efab1cb744121bcdc44a4ac10f42c5","modified":1452522632574},{"_id":"themes/strict/layout/_views/post.jade","shasum":"b0d87f671893e17cec2c7e2e9b562a7c4360ce1e","modified":1456156121044},{"_id":"themes/strict/layout/archive.jade","shasum":"6668090697e73141970acc86c14a911e100fc854","modified":1452522632580},{"_id":"themes/strict/layout/category.jade","shasum":"d163be3a4ebba67ccd9887005738d5dcc55d3d18","modified":1452522632583},{"_id":"themes/strict/layout/index.jade","shasum":"85e23ae03ff498f553d8486d8314c5707a5cab5c","modified":1456156121047},{"_id":"themes/strict/layout/page.jade","shasum":"7d665308c2c7bcdd59b2b5315973f12cc2b47158","modified":1452522632588},{"_id":"themes/strict/layout/post.jade","shasum":"fe435df14f9a2c5c6555833c0fae9bfcf0daab95","modified":1452522632591},{"_id":"themes/strict/layout/tag.jade","shasum":"0b690b69b0ac77e7e48460a965af9717c6129482","modified":1452522632594},{"_id":"themes/strict/package.json","shasum":"db3b781b849b1bed5d31eee27ec5a7673775d62c","modified":1452522632598},{"_id":"themes/strict/source/css/_main-r.styl","shasum":"a8353a0a84ecf734a0a24646503809a8184fccb8","modified":1456156121052},{"_id":"themes/strict/source/css/_var.styl","shasum":"16d8c93670fbc8dc36af7960a960b587171fa95f","modified":1456503827469},{"_id":"themes/strict/source/css/base/_base.styl","shasum":"9d0de088a46c880b3c4f66e039a7ee1f9f412fc6","modified":1456505276524},{"_id":"themes/strict/source/css/base/_mixin.styl","shasum":"2ae14baf0a54d454d1d36e2a67478903fe4f4f44","modified":1452522632612},{"_id":"themes/strict/source/css/base/_font.styl","shasum":"30c0e781cb9b1a925e84e3c95878c59b018aec67","modified":1452522632610},{"_id":"themes/strict/source/css/base/_reset.styl","shasum":"93fac4ddab0cc39ddabe97d5fddd081da1b12e4f","modified":1452522632615},{"_id":"themes/strict/source/css/base/_util.styl","shasum":"5cd96ac8735361f6d2d9898ba86b1106064d44da","modified":1452522632617},{"_id":"themes/strict/source/css/main.styl","shasum":"17a1955c6eed870b7c87997024a60786eae07130","modified":1452522632621},{"_id":"themes/strict/source/css/partial/_main.styl","shasum":"75acf8ed01d5d20837c8cc25b7af8a41c84b3ce6","modified":1456505506328},{"_id":"themes/strict/source/css/partial/_post.styl","shasum":"e7b493881eddd063cc8c9e464717db8f3b407c2b","modified":1456505489707},{"_id":"themes/strict/source/css/vendor/_echo.styl","shasum":"fe854c93a219c72c1a8bbd29b69b1f34417b537b","modified":1456156121067},{"_id":"themes/strict/source/css/vendor/_highlight.styl","shasum":"c177c215ca83ee5ec89536c855adf0b2cac418e5","modified":1456156121070},{"_id":"themes/strict/source/css/vendor/_normalize.styl","shasum":"725436016e8b12bb6a292d881e396681abe7f5a6","modified":1452522632636},{"_id":"themes/strict/source/fonts/icon.eot","shasum":"9097fa8611053f4c2e5f35cd2a64efc40bd8b685","modified":1452522632639},{"_id":"themes/strict/source/fonts/icon.svg","shasum":"b6c00a2ddf10a52706ddbe8814ec71ce51043053","modified":1452522632642},{"_id":"themes/strict/source/fonts/icon.ttf","shasum":"9a18ee1b1f245f6cc2c61fd1ebe58266b6c451ba","modified":1452522632645},{"_id":"themes/strict/source/fonts/icon.woff","shasum":"7d15057502dd0086931b763ebc62458c8669b4ed","modified":1452522632648},{"_id":"themes/strict/source/img/love-2.jpg","shasum":"b494da1ccfcd2e02ffa347da893020788e600410","modified":1456505218865},{"_id":"themes/strict/source/img/white-2.jpg","shasum":"52d7fffb9e25eb5657117f4bd517296a6f670ceb","modified":1456503687127},{"_id":"themes/strict/source/img/bg.jpg","shasum":"7f5c6b6bcd317d576d0664122be9193adeb74e6e","modified":1456504199265},{"_id":"public/img/white-2.jpg","modified":1456505646774,"shasum":"52d7fffb9e25eb5657117f4bd517296a6f670ceb"},{"_id":"public/img/love-2.jpg","modified":1456505646784,"shasum":"b494da1ccfcd2e02ffa347da893020788e600410"},{"_id":"public/img/bg.jpg","modified":1456505646790,"shasum":"7f5c6b6bcd317d576d0664122be9193adeb74e6e"},{"_id":"public/fonts/icon.woff","modified":1456505646796,"shasum":"7d15057502dd0086931b763ebc62458c8669b4ed"},{"_id":"public/fonts/icon.ttf","modified":1456505646800,"shasum":"9a18ee1b1f245f6cc2c61fd1ebe58266b6c451ba"},{"_id":"public/fonts/icon.svg","modified":1456505646827,"shasum":"b6c00a2ddf10a52706ddbe8814ec71ce51043053"},{"_id":"public/fonts/icon.eot","modified":1456505646837,"shasum":"9097fa8611053f4c2e5f35cd2a64efc40bd8b685"},{"_id":"public/css/main.css","modified":1456505647288,"shasum":"2742769692ba89e2d846d18296a460f672ec0a9b"},{"_id":"public/favicon.ico","modified":1456505647377,"shasum":"c0159d635085448ccc0aa746d03b48469bffb12c"},{"_id":"public/404.html","modified":1456505647717,"shasum":"beed79381ce156142b393c262e137a26e0f59df6"},{"_id":"public/tags/index.html","modified":1456505647852,"shasum":"c5fa12c8114f39e00e6b4590ca0c374741049593"},{"_id":"public/categories/index.html","modified":1456505647973,"shasum":"120e65bb0e209ebc2a2ef8523f8b3d74abf025fa"},{"_id":"public/about/index.html","modified":1456505648064,"shasum":"e642f6031eab98cb0bb04bdbdc871c0e62dac0a9"},{"_id":"public/battleship-girls/index.html","modified":1456505648205,"shasum":"d1cbf8499e821c01818362a90907d5927995f5b8"},{"_id":"public/use-js-to-convert-ts-to-data/index.html","modified":1456505648308,"shasum":"3fa8515561daf71a9134864d99a39bd692b3e7df"},{"_id":"public/write-a-compatible-js-module/index.html","modified":1456505648398,"shasum":"6e0de3a040a2fc074dcbb76999cf34f5774e0521"},{"_id":"public/show-a-default-image-when-the-image-is-broken/index.html","modified":1456505648502,"shasum":"4cbe05dc6def31f6d5e74014e046b9cfbb643705"},{"_id":"public/git-remember-password-in-window-and-linux/index.html","modified":1456505648602,"shasum":"eac853fad1cbca003ff42019431ee44cdcd59827"},{"_id":"public/baseview-in-backbone/index.html","modified":1456505648706,"shasum":"0be3d2dcd79692101ddc21e12908ece5dc915350"},{"_id":"public/wrong-clearfix-make-me-crazy/index.html","modified":1456505648810,"shasum":"7da68d7c707acea237f0912f16ac25c293ee216c"},{"_id":"public/wamp-mysql-chinese-question-mark/index.html","modified":1456505648866,"shasum":"d2b1ac59f8cdff51ffd1f510ca106f189ed14eec"},{"_id":"public/modify-wamp-mysql-password/index.html","modified":1456505648923,"shasum":"c1c2f680448d39337cae53e1726582c0de86f4e1"},{"_id":"public/protect-yourself-in-network/index.html","modified":1456505648989,"shasum":"c68f11bbae526d74f01085c80f24f3f452cab82a"},{"_id":"public/navicat-10-1-7-key/index.html","modified":1456505649053,"shasum":"e000110dfe8f3f453bd2f63071a3ffe85b678c7c"},{"_id":"public/archives/index.html","modified":1456505649135,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/page/2/index.html","modified":1456505649216,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2014/index.html","modified":1456505649301,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2014/12/index.html","modified":1456505649381,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/index.html","modified":1456505649461,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/page/2/index.html","modified":1456505649544,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/07/index.html","modified":1456505649614,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/08/index.html","modified":1456505649690,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/11/index.html","modified":1456505649775,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2015/12/index.html","modified":1456505649844,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2016/index.html","modified":1456505649921,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/archives/2016/02/index.html","modified":1456505649989,"shasum":"9a4d22db04dba4097a75b53a3c075affa62d81d8"},{"_id":"public/categories/css/index.html","modified":1456505650052,"shasum":"0be5dad8f1539a6d255e754cbd60b88e0f548e5e"},{"_id":"public/categories/javascript/index.html","modified":1456505650108,"shasum":"a9d7e341f686211bb35683c2b590f574c4bac9d0"},{"_id":"public/categories/mysql/index.html","modified":1456505650171,"shasum":"6374402f60a52dbf19afb8ce82ac880b4f800e19"},{"_id":"public/categories/生活杂记/index.html","modified":1456505650218,"shasum":"459820e507a91d6096e38f44eb17bc149df220c4"},{"_id":"public/categories/git/index.html","modified":1456505650280,"shasum":"e28cd893494498c1f2a1acc2f00759098560d31b"},{"_id":"public/categories/舰娘/index.html","modified":1456505650338,"shasum":"1b7da96660d506c106fc587b7ca36d209b9dce20"},{"_id":"public/categories/backbone/index.html","modified":1456505650393,"shasum":"80ecb90ca767c812d26a2d88041ad4df45af23e5"},{"_id":"public/sitemap.xml","modified":1456505650450,"shasum":"449899e69638218726c57f86189a162a62afa8a2"},{"_id":"public/atom.xml","modified":1456505650453,"shasum":"0f2416f0e54725998cb74c4bdc7caf9cf7205072"},{"_id":"public/index.html","modified":1456505650533,"shasum":"1617e3040af92adffda71bec258fbcadfff4b01a"},{"_id":"public/page/2/index.html","modified":1456505650598,"shasum":"8bf0630b2e6bd9f3726c5868ed23bc3c29fdef9f"},{"_id":"public/tags/html/index.html","modified":1456505650658,"shasum":"e53fa1fb6c03468a77829c68ac4bfc3a976349ca"},{"_id":"public/tags/css/index.html","modified":1456505650707,"shasum":"0be5dad8f1539a6d255e754cbd60b88e0f548e5e"},{"_id":"public/tags/compatible-module/index.html","modified":1456505650782,"shasum":"a30a82a0b8daa13877424aa1af4982f53253b637"},{"_id":"public/tags/amd/index.html","modified":1456505650839,"shasum":"9579e9c6d38116cf542ee83c8ce08abf40847819"},{"_id":"public/tags/cmd/index.html","modified":1456505650883,"shasum":"08ea18aa271b20987e929d2e0836b7daf0fe3abc"},{"_id":"public/tags/mysql/index.html","modified":1456505650943,"shasum":"0998e4e8fcfafc55743c957b3fcdb9cdea8df6af"},{"_id":"public/tags/中文乱码/index.html","modified":1456505651000,"shasum":"13ebc486d0d2e7d7b0ea217aeb48bb34e660b22e"},{"_id":"public/tags/ts/index.html","modified":1456505651056,"shasum":"3a8266846d594e99199c2a1ad1b919bb7984888b"},{"_id":"public/tags/date/index.html","modified":1456505651105,"shasum":"981126526e5cd0d7ad53f22efa11023c74146836"},{"_id":"public/tags/format/index.html","modified":1456505651159,"shasum":"e636f4378b5fed5ef97038c211362dc041dae4e6"},{"_id":"public/tags/js/index.html","modified":1456505651215,"shasum":"d780cdab5809fecd755349df6f029ee8ce82ac55"},{"_id":"public/tags/imgage-error/index.html","modified":1456505651288,"shasum":"bffeb67b8b23ca61e945c6278ae4dc0dae35b185"},{"_id":"public/tags/tedx/index.html","modified":1456505651341,"shasum":"a68d7ffcaa7d0a359e4c857774a0bfc78c75e285"},{"_id":"public/tags/在网络暴力中捍卫自己/index.html","modified":1456505651404,"shasum":"53858ae44fe4c81a43e2a8041ba00aeeb99e584b"},{"_id":"public/tags/演讲稿/index.html","modified":1456505651462,"shasum":"493aefea4573da3ab076d3640536f6ae1352085c"},{"_id":"public/tags/袁姗姗/index.html","modified":1456505651516,"shasum":"f46bced1669e3d48eea83143ef941db356c3108c"},{"_id":"public/tags/navicat/index.html","modified":1456505651573,"shasum":"1cc9b4ba334731553e7782b2f6d7405ba5a6dc9e"},{"_id":"public/tags/paswword/index.html","modified":1456505651627,"shasum":"81f01e218021692c5b4635753b77d14decbf1614"},{"_id":"public/tags/git/index.html","modified":1456505651684,"shasum":"e60cfd6d3d3ed4cea333ffda7a8cbbd3a1e7ff98"},{"_id":"public/tags/记住密码/index.html","modified":1456505651733,"shasum":"1f4f04595bab8d0dfbcfd38df2dc54994d99f89b"},{"_id":"public/tags/舰娘/index.html","modified":1456505651793,"shasum":"1b7da96660d506c106fc587b7ca36d209b9dce20"},{"_id":"public/tags/backbone/index.html","modified":1456505651853,"shasum":"569a6dc9bb383049ba47d9df6878d3d4e880bdad"},{"_id":"public/tags/base/index.html","modified":1456505651912,"shasum":"26af05efc2cb9d967c38f9743692d17e532955bc"},{"_id":"public/tags/view/index.html","modified":1456505651964,"shasum":"8640e5c83a33ab1298ca54034b51045ef7611fc6"}],"Category":[{"name":"css","_id":"cil3xusvi000558u3xvh7gea1"},{"name":"JavaScript","_id":"cil3xusvr000c58u36tjzbqok"},{"name":"MySQL","_id":"cil3xusw0000l58u39dhdwpy2"},{"name":"生活杂记","_id":"cil3xuswr001658u34g3pk0t3"},{"name":"GIT","_id":"cil3xusx9001r58u3cl93ogau"},{"name":"舰娘","_id":"cil3xusxg001y58u3dgits05a"},{"name":"Backbone","_id":"cil3xusxm002358u300kgty0d"},{"name":"Underscore","_id":"cil3xusxx002f58u3o1udh1xf"},{"name":"Hexo","_id":"cil3xusy4002m58u3jiu961io"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","date":"2016-01-03T06:03:03.043Z","updated":"2015-11-07T09:40:47.180Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cil3xusul000058u32nmvmpik"},{"title":"Tagcloud","date":"2015-11-07T09:35:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: Tagcloud\ndate: 2015-11-07 17:35:00\ntype: \"tags\"\n---","updated":"2015-11-07T09:35:51.367Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cil3xusv2000158u3bbfh421q"},{"title":"分类","date":"2015-11-07T09:35:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2015-11-07 17:35:00\ntype: \"categories\"\n---","updated":"2015-11-07T09:36:41.842Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cil3xusv5000258u3tg0hsozj"},{"title":"about","date":"2015-11-07T09:39:49.000Z","_content":"","source":"about/index.md","raw":"title: about\ndate: 2015-11-07 17:39:49\n---\n","updated":"2015-11-07T09:39:49.111Z","path":"about/index.html","comments":1,"layout":"page","_id":"cil3xusv6000358u3wo5w0let"}],"Post":[{"title":"Wrong clearfix Make me crazy!","date":"2015-11-11T09:45:59.000Z","_content":"\nClearfix 就是这么简单！\n```css\n.clearfix:after,\n.clearfix:before {\n    display: table;\n    content: \" \"\n}\n\n.clearfix:after {\n    clear: both\n}\n```\n","source":"_posts/wrong-clearfix-make-me-crazy.md","raw":"title: 'Wrong clearfix Make me crazy!'\ndate: 2015-11-11 17:45:59\ntags:\n  - html\n  - css\ncategories:\n  - css\n---\n\nClearfix 就是这么简单！\n```css\n.clearfix:after,\n.clearfix:before {\n    display: table;\n    content: \" \"\n}\n\n.clearfix:after {\n    clear: both\n}\n```\n","slug":"wrong-clearfix-make-me-crazy","published":1,"updated":"2015-11-27T02:59:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusvb000458u3xb0mk6ox"},{"title":"编写一个可以兼容 AMD 和 CMD 的 js 模块","date":"2015-11-29T12:11:07.000Z","_content":"\n没什么好解释的，直接看代码吧。\n\n```js\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        //define(['jquery', 'underscore'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify/Seajs\n        module.exports = factory(require('jquery'), require('underscore'));\n    } else {\n        // Browser globals\n        factory(jQuery, _);\n        //factory();\n    }\n}(function ($, _) {\n    //doSomething...\n}));\n```\n\n还有一种写法\n```js\n// from: http://segmentfault.com/a/1190000003732752\n;(function(){\n    function MyModule() {\n        // ...\n    }\n    \n    var moduleName = MyModule;\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        module.exports = moduleName;\n    } else if (typeof define === 'function' && (define.amd || define.cmd)) {\n        define(function() { return moduleName; });\n    } else {\n        this.moduleName = moduleName;\n    }\n}).call(function() {\n    return this || (typeof window !== 'undefined' ? window : global);\n});\n```","source":"_posts/write-a-compatible-js-module.md","raw":"title: 编写一个可以兼容 AMD 和 CMD 的 js 模块\ntags:\n  - compatible module\n  - AMD\n  - CMD\ncategories:\n  - JavaScript\ndate: 2015-11-29 20:11:07\n---\n\n没什么好解释的，直接看代码吧。\n\n```js\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        //define(['jquery', 'underscore'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify/Seajs\n        module.exports = factory(require('jquery'), require('underscore'));\n    } else {\n        // Browser globals\n        factory(jQuery, _);\n        //factory();\n    }\n}(function ($, _) {\n    //doSomething...\n}));\n```\n\n还有一种写法\n```js\n// from: http://segmentfault.com/a/1190000003732752\n;(function(){\n    function MyModule() {\n        // ...\n    }\n    \n    var moduleName = MyModule;\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        module.exports = moduleName;\n    } else if (typeof define === 'function' && (define.amd || define.cmd)) {\n        define(function() { return moduleName; });\n    } else {\n        this.moduleName = moduleName;\n    }\n}).call(function() {\n    return this || (typeof window !== 'undefined' ? window : global);\n});\n```","slug":"write-a-compatible-js-module","published":1,"updated":"2015-12-16T08:03:28.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusvp000b58u3qws8rmty"},{"title":"wamp mysql 中文显示为？","id":"235","date":"2015-08-09T05:25:28.000Z","_content":"\n发现中文显示为“？”，然后我看了一下 mysql.ini，添加了两行\n\n```\n[mysqld]\nport=3306\n#下面的两行是添加的\ncharacter_set_client=utf8\ncharacter_set_server=utf8\n```\n\n后来再看 mysql 中的信息发现这样了，不过中文问题已经解决了。\n```sql\nmysql> show variables like 'character%';\n+--------------------------+----------------------------------------------------\n+\n| Variable_name            | Value\n|\n+--------------------------+----------------------------------------------------\n+\n| character_set_client     | gbk\n|\n| character_set_connection | gbk\n|\n| character_set_database   | utf8\n|\n| character_set_filesystem | binary\n|\n| character_set_results    | gbk\n|\n| character_set_server     | utf8\n|\n| character_set_system     | utf8\n|\n| character_sets_dir       | E:\\Soft\\wamp\\bin\\mysql\\mysql5.6.12\\share\\charsets\\\n|\n+--------------------------+----------------------------------------------------\n```","source":"_posts/wamp-mysql-chinese-question-mark.md","raw":"title: wamp mysql 中文显示为？\ntags:\n  - mysql\n  - 中文乱码\nid: 235\ncategories:\n  - MySQL\ndate: 2015-08-09 13:25:28\n---\n\n发现中文显示为“？”，然后我看了一下 mysql.ini，添加了两行\n\n```\n[mysqld]\nport=3306\n#下面的两行是添加的\ncharacter_set_client=utf8\ncharacter_set_server=utf8\n```\n\n后来再看 mysql 中的信息发现这样了，不过中文问题已经解决了。\n```sql\nmysql> show variables like 'character%';\n+--------------------------+----------------------------------------------------\n+\n| Variable_name            | Value\n|\n+--------------------------+----------------------------------------------------\n+\n| character_set_client     | gbk\n|\n| character_set_connection | gbk\n|\n| character_set_database   | utf8\n|\n| character_set_filesystem | binary\n|\n| character_set_results    | gbk\n|\n| character_set_server     | utf8\n|\n| character_set_system     | utf8\n|\n| character_sets_dir       | E:\\Soft\\wamp\\bin\\mysql\\mysql5.6.12\\share\\charsets\\\n|\n+--------------------------+----------------------------------------------------\n```","slug":"wamp-mysql-chinese-question-mark","published":1,"updated":"2015-11-23T03:00:31.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusvy000k58u3c5ea76sa"},{"title":"JavaScript 中 Timestamp 与 Date 的转化","date":"2015-12-02T03:10:44.000Z","_content":"## 问题产生\n今天在处理一个接口时，发现返回的格式是这样的：\n```json\n{\n    \"meta\": {\n        \"has_next_msg\": false\n    },\n    \"objects\": [\n        {\n            \"text\": \"111\",\n            \"from_user_type\": \"PAT\",\n            \"pic\": \"\",\n            \"ts\": 1419939065\n        }\n    ]\n}\n```\n\n`ts` 那个属性我不太熟悉，不过我觉得应该是 timestamp 的意思吧。后来才知道，`ts` 就是该条消息的发送时间戳（timestamp），显示这条信息的时候应该显示为日期。\n\n## 把 Date 转化为 Timestamp\n\n我们都知道，在 js 里面把 date 转化为 timestamp 的方法比较简单，而且方法也有好多种，比如：\n\n```js\n// get the timestamp in seconds\nMath.floor(Date.now() / 1000);\n\n// or with a slightly way\nDate.now() / 1000 | 0\n\n// Year 2038 problem? lol...\nnew Date('Jan 1, 2039') / 1000 | 0 // -2117514496 \n\n/*----------*/\nMath.round(new Date().getTime()/1000);\n\n+new Date / 1000 | 0\n\n~~(Date.now() / 1000)\n\nnew Date / 1e3 | 0\n```\n\n## 把 Timestamp 转化为 Date\n\n还有一种需求，比如我要把 timestamp 转化为 `1991-10-03 06:01:54` ，那么就需要先把这个 timestamp 转化为日期， 然后再进行format吧，正好我找到一个比较方便的办法：\n```js\nDate.prototype.format = function(format) {\n    var o = {\n        'M+': this.getMonth() + 1,          // month\n        'd+': this.getDate(),                 // day\n        'h+': this.getHours(),                  // hour\n        'm+': this.getMinutes(),                  // minute\n        's+': this.getSeconds(),                    // second     \n        'q+': Math.floor((this.getMonth() + 3) / 3),  // quarter\n        'S' : this.getMilliseconds()                 // millisecond\n    };\n\n    // year\n    if (/(y+)/.test(format) || /(Y+)/.test(format)) {\n        format = format.replace(RegExp.$1, (this.getFullYear() + '')\n                       .substr(4 - RegExp.$1.length));\n    }\n\n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(format)) {\n            var first = RegExp.$1;\n            var str = first.length === 1\n                    ? o[k]\n                    : ('00' + o[k]).substr(('' + o[k]).length); // nb\n            format = format.replace(first, str);\n        }\n    }\n\n    return format;\n};\n\nfunction tsToDate(timestamp) {\n    return (new Date(timestamp * 1000)).format('yyyy-MM-dd hh:mm:ss');\n}\n\n\n// test it\n> tsToDate(1448967948)\n< \"2015-12-01 19:05:48\"\n```\n","source":"_posts/use-js-to-convert-ts-to-data.md","raw":"title: JavaScript 中 Timestamp 与 Date 的转化\ntags:\n  - ts\n  - date\n  - format\n  - js\ncategories:\n  - JavaScript\ndate: 2015-12-02 11:10:44\n---\n## 问题产生\n今天在处理一个接口时，发现返回的格式是这样的：\n```json\n{\n    \"meta\": {\n        \"has_next_msg\": false\n    },\n    \"objects\": [\n        {\n            \"text\": \"111\",\n            \"from_user_type\": \"PAT\",\n            \"pic\": \"\",\n            \"ts\": 1419939065\n        }\n    ]\n}\n```\n\n`ts` 那个属性我不太熟悉，不过我觉得应该是 timestamp 的意思吧。后来才知道，`ts` 就是该条消息的发送时间戳（timestamp），显示这条信息的时候应该显示为日期。\n\n## 把 Date 转化为 Timestamp\n\n我们都知道，在 js 里面把 date 转化为 timestamp 的方法比较简单，而且方法也有好多种，比如：\n\n```js\n// get the timestamp in seconds\nMath.floor(Date.now() / 1000);\n\n// or with a slightly way\nDate.now() / 1000 | 0\n\n// Year 2038 problem? lol...\nnew Date('Jan 1, 2039') / 1000 | 0 // -2117514496 \n\n/*----------*/\nMath.round(new Date().getTime()/1000);\n\n+new Date / 1000 | 0\n\n~~(Date.now() / 1000)\n\nnew Date / 1e3 | 0\n```\n\n## 把 Timestamp 转化为 Date\n\n还有一种需求，比如我要把 timestamp 转化为 `1991-10-03 06:01:54` ，那么就需要先把这个 timestamp 转化为日期， 然后再进行format吧，正好我找到一个比较方便的办法：\n```js\nDate.prototype.format = function(format) {\n    var o = {\n        'M+': this.getMonth() + 1,          // month\n        'd+': this.getDate(),                 // day\n        'h+': this.getHours(),                  // hour\n        'm+': this.getMinutes(),                  // minute\n        's+': this.getSeconds(),                    // second     \n        'q+': Math.floor((this.getMonth() + 3) / 3),  // quarter\n        'S' : this.getMilliseconds()                 // millisecond\n    };\n\n    // year\n    if (/(y+)/.test(format) || /(Y+)/.test(format)) {\n        format = format.replace(RegExp.$1, (this.getFullYear() + '')\n                       .substr(4 - RegExp.$1.length));\n    }\n\n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(format)) {\n            var first = RegExp.$1;\n            var str = first.length === 1\n                    ? o[k]\n                    : ('00' + o[k]).substr(('' + o[k]).length); // nb\n            format = format.replace(first, str);\n        }\n    }\n\n    return format;\n};\n\nfunction tsToDate(timestamp) {\n    return (new Date(timestamp * 1000)).format('yyyy-MM-dd hh:mm:ss');\n}\n\n\n// test it\n> tsToDate(1448967948)\n< \"2015-12-01 19:05:48\"\n```\n","slug":"use-js-to-convert-ts-to-data","published":1,"updated":"2016-02-22T15:48:41.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusw4000r58u3gjcthh5t"},{"title":"图片加载错误时显示默认图片","date":"2015-11-27T10:24:36.000Z","_content":"\n## 直接写\n\n```js\nfunction imgError(image) {\n    image.onerror = null; // prevent event bubble\n    image.src = \"/images/noimage.gif\";\n    return true;\n}\n```\n```html\n<img src=\"image.png\" onerror=\"imgError(this);\"/>\n```\n\n## 使用 jQuery\n```js\n$(\"img\").error(function () {\n    $(this).unbind(\"error\").attr(\"src\", \"broken.gif\");\n});\n\n//If you use this technique you can use the \"one\" method to avoid needing to unbind the event: \n$('img').one('error', function() { \n  this.src = 'broken.gif'; \n}); \n```\n\n## 还有一种写法\n```js\n$(window).load(function() {\n  $('img').each(function() {\n    if (!this.complete \n        || typeof this.naturalWidth == \"undefined\" \n        || this.naturalWidth == 0) {\n      // image was broken, replace with your new image\n      this.src = 'broken.gif';\n    }\n  });\n});\n```","source":"_posts/show-a-default-image-when-the-image-is-broken.md","raw":"title: 图片加载错误时显示默认图片\ntags:\n  - imgage error\ncategories:\n  - JavaScript\ndate: 2015-11-27 18:24:36\n---\n\n## 直接写\n\n```js\nfunction imgError(image) {\n    image.onerror = null; // prevent event bubble\n    image.src = \"/images/noimage.gif\";\n    return true;\n}\n```\n```html\n<img src=\"image.png\" onerror=\"imgError(this);\"/>\n```\n\n## 使用 jQuery\n```js\n$(\"img\").error(function () {\n    $(this).unbind(\"error\").attr(\"src\", \"broken.gif\");\n});\n\n//If you use this technique you can use the \"one\" method to avoid needing to unbind the event: \n$('img').one('error', function() { \n  this.src = 'broken.gif'; \n}); \n```\n\n## 还有一种写法\n```js\n$(window).load(function() {\n  $('img').each(function() {\n    if (!this.complete \n        || typeof this.naturalWidth == \"undefined\" \n        || this.naturalWidth == 0) {\n      // image was broken, replace with your new image\n      this.src = 'broken.gif';\n    }\n  });\n});\n```","slug":"show-a-default-image-when-the-image-is-broken","published":1,"updated":"2015-11-29T12:18:07.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xuswj001158u3dvnr6p25"},{"title":"在网络暴力中捍卫自己","id":"224","date":"2015-07-10T13:52:53.000Z","_content":"\n我想先问大家一个问题，有谁一年365，天天被未曾谋面的陌生人骂?举手的这个人就站在你们面前。不过别担心，我今天不是来诉苦的，我是穿着马甲来跟大家分享如何被骂大的。\n\n网络对于我们来说再日常不过，但是当你身处网络世界的围攻中，就不再那么轻松。2013年的以前，我作梦也想不到自己会变成网络世界里的“黑姑娘”。因为参演了一部电视剧，演技没有达到观众的预期，故事的结局不尽人意，而被推到了风口浪尖，让我从一个还在摸爬滚打的小演员，一夜之间变成了被大家声讨的“热门人物”。\n\n震惊之余，让自己尽快从虚拟的世界中挣脱出来是我唯一的出路。我选择在网络声中被倒下，就在网络声中爬起来。有不少人认为，公众人物就应该具有强大的承受能力和耐力，打不还手，骂不还口。偶尔被坑蒙拐骗了，还要尽量先捂着不敢报警。\n\n当我被骂得小有名气的时候，我就暗自思量。反正也挨骂，不如用最积极的方式迎接骂声。2013年3月3日，我在微博上发出了一条名为“爱的骂骂”的微博，既然大家那么需要宣泄，点击鼠标可以不用负责，那我也动动手指头，干点什么吧！\n\n我在微博里面制定了骂的规则——骂，没问题，但请集中精力地骂。只要在我这条微博下面留言的，不管是鼓励我的、骂我的，还是随便说说的，我都认捐五毛。24个小时，有十万多条留言，捐款金额是50693.5元，作为北京一家残疾孤儿康复机构的手术费。\n\n在这里，我要对每一位留言的人表示感谢。因为我们一起在虚拟的世界中救助了4个在现实生活中顽强生活着的残疾孤儿。其中有一个孩子，在手术后的那一年，终于有机会可以站起来了。那时候她还不满三岁。当我看到她第一次站起来，我很感动，也很骄傲，这个“黑姑娘”干了一件痛快的事。\n\n是的，我说出了金额。我知道，一定会有人说“捐那么少，还好意思报数”。我相信现在大部分人都不愿意公布捐款金额，因为捐款已经不再是一件随心的行动，而是成为大家根据金额的多少来衡量爱心的大小。我相信在座的各位也一定有过朋友之间随份子该给多少才合适的烦恼。我之所以说出来，不仅仅是因为我不觉得随性的行为需要躲闪，更因为“爱的骂骂”是每一个留言人的镜子。当时骂过我的人，也许，在两年后的今天听到我说的这番话，会想起曾经不太善意的留言却给了这些孩子们机会获得新生。这同样值得高兴。\n\n其实我们每个人都有不同阶段的新生，不是吗?“爱的骂骂”发出的那一刻，我如重生般释然了。虽然，我不像很多演员那样，拥有令人赞叹的表演才华，自己也觉得不是天生吃这碗饭的，但是既然选择了演员这份职业，我相信只要通过自己的努力和善待他人，就可以让自己的家人和自己过上幸福美满的生活。\n\n然而这一切，在2013年的夏天被一句开创演艺界(网络)暴力先河的“滚出娱乐圈”所动摇。我是第一个(被)放在主语位置的人。袁姗姗这个名字好像从此就和“一无是处”划上了等号。那个时候，不管说什么、做什么、演什么都不对。更有媒体总结了“袁姗姗不被观众所喜欢的五大理由”，第一条理由是“没有理由”。这是得有多深厚的感情基础，才能达到的境界。\n\n2013年确实挺让人操心的，从春天到夏天都没有平静过。一开始，我也有些懊恼，不知道到底发生了什么。我既然没有不劳而获，也没有做过伤天害理的事。为什么让我“滚”?!没多久，我想明白了一个道理，谁都可以说我不好，但是自己必须接纳那个心安理得的自己。既然我的演艺生涯要倒数开始，那我之后的每一点进步都是充满喜悦的。从零分到六十分比从满分到六十分，哪个更让人开心呢?\n\n也是从那个时候，我重拾扔下了多年的小提琴，还有健身。运动让我心情愉悦。不工作的时候，练琴和健身会让我的每一天都过得很充实，根本没有过多的时间停留在网上，更顾不上网友的围观。我建议那些沉迷于网络的年轻人，每天可以挤出一点时间锻炼身体。当有朝一日被他人欺负的时候，至少可以像我一样，身轻如燕，自由翻滚。\n\n不尽人意的2013年确实过得有些艰辛，但是我也时刻提醒着自己，别忘了尽可能给予所能达到的人以温暖。这是对鼓励过你的人最好的感激方式。但同时，我们也不要忽略身边朋友向你发出的求助信号。也许你的关心会改变他的决定。\n\n我在来之前了解到几个数据。在美国，有40%的年轻人遭遇过网络欺凌侵害，甚至有些受害者因此而患上精神疾病，身心受损。联合国儿童基金会在2014年的9月发布了一则消息报道，在法国，6到18岁之间的青少年有12.5%的人都有过在网上被攻击的经历。在中国，因为网络暴力而结束生命的人，离我们的生活越来越近。\n\n前不久，在台湾，有一位艺人因为网络暴力而自杀。听到这个消息的时候，我非常惋惜。我不知道她内心到底挣扎了多久。但当我看到这则新闻的时候，我有过一念之间的不安。如果在这之前，我可以跟她说几句话，她是不是好过一些?\n\n互联网的时代，让人与人之间的沟通方式越来越便捷，沟通成本却越来越大。足不出户在网上匿名可以干很多事，每天都要面对接踵而来的海量信息，有谁还愿意费力去核实消息的真实性，也不会有太多人会为自己发出或转发的信息而深思熟虑。那还有多少人会为他人的生命叹息呢?\n\n语言不应该成为致命的利器。网络的诞生也不应该是为了制造困扰，而是为了让生活变得更加美好。作为过去也许将来还会遭遇网络暴力的过来人，我不希望再有人因为网络暴力而受到伤害。请善用语言，让人言可敬。\n\n特别感谢在那段特殊时间陪伴我的家人和朋友，感谢他们承受住了一个当时还没有来得及减肥、各方面份量都很重的我。经历了这些，并不是想说明自己有多强大，但确实因为这些切身经历让我有了足够的时间去思考。我曾经问过自己一个问题——如果我当时真的不堪重负放弃了演员这个职业，是否网络暴力就会消失？答案当然不会。既然还是要面对，就应该积极面对。\n\n前不久，我参与了一部公益电影的拍摄。电影传递了一个非常积极的理念：每个人都有自由选择的机会和权利，无论你生下来是幸运的还是不幸的。我非常赞同，所以我选择做一个积极快乐的自己，不再受控于网络暴力中，不再只能看到消极的一面。\n\n都说做公益是在帮助他人，在我身上，成全了一个更加快乐的自己。不知道大家有没有看过这部电影。电影的名字叫《有一天》。我想在这里特别推荐一下。虽然我只参演了电影的一部分，但也给我带来了很多启发和感动。这部电影关注了九类特殊儿童群体。我参与拍摄的故事和聋哑儿童有关。跟我一起搭档演出的也是一名聋哑儿童。拍摄之前，我还有些顾虑，我不知道该怎么去跟他交流，我担心会因为自己不小心的举动伤害到他。但是见面之后，我才发现成年人的世界真的是因为想太多了变得复杂。只要我们保持一颗平常的心，用平等的方式去交流，就不会存在特别的障碍。重要的是你怎么看，而不是他怎么想。\n\n拍摄的那几天，我平静而快乐。每当完成一个镜头，这个小少年都会跟我竖起大拇指示意。他这个小小的举动也提醒了我和我们，有人选择赞美有人则不。\n\n感谢“爱的骂骂”，感谢《有一天》，感谢喝倒彩时刻提醒我的人，感谢一直鼓励我的家人和朋友，感谢倔强中的那个自己。我希望能有更多的人可以像我一样，主动地从逆境中走出来。这个世界还有很多需要我们关心的事去做，需要我们关心的人去爱。保持自己的真实，倔强地活下去。\n\n感谢大家的聆听，感谢网络世界将我带到你们面前。\n\n&nbsp;","source":"_posts/protect-yourself-in-network.md","raw":"title: 在网络暴力中捍卫自己\ntags:\n  - tedx\n  - 在网络暴力中捍卫自己\n  - 演讲稿\n  - 袁姗姗\nid: 224\ncategories:\n  - 生活杂记\ndate: 2015-07-10 21:52:53\n---\n\n我想先问大家一个问题，有谁一年365，天天被未曾谋面的陌生人骂?举手的这个人就站在你们面前。不过别担心，我今天不是来诉苦的，我是穿着马甲来跟大家分享如何被骂大的。\n\n网络对于我们来说再日常不过，但是当你身处网络世界的围攻中，就不再那么轻松。2013年的以前，我作梦也想不到自己会变成网络世界里的“黑姑娘”。因为参演了一部电视剧，演技没有达到观众的预期，故事的结局不尽人意，而被推到了风口浪尖，让我从一个还在摸爬滚打的小演员，一夜之间变成了被大家声讨的“热门人物”。\n\n震惊之余，让自己尽快从虚拟的世界中挣脱出来是我唯一的出路。我选择在网络声中被倒下，就在网络声中爬起来。有不少人认为，公众人物就应该具有强大的承受能力和耐力，打不还手，骂不还口。偶尔被坑蒙拐骗了，还要尽量先捂着不敢报警。\n\n当我被骂得小有名气的时候，我就暗自思量。反正也挨骂，不如用最积极的方式迎接骂声。2013年3月3日，我在微博上发出了一条名为“爱的骂骂”的微博，既然大家那么需要宣泄，点击鼠标可以不用负责，那我也动动手指头，干点什么吧！\n\n我在微博里面制定了骂的规则——骂，没问题，但请集中精力地骂。只要在我这条微博下面留言的，不管是鼓励我的、骂我的，还是随便说说的，我都认捐五毛。24个小时，有十万多条留言，捐款金额是50693.5元，作为北京一家残疾孤儿康复机构的手术费。\n\n在这里，我要对每一位留言的人表示感谢。因为我们一起在虚拟的世界中救助了4个在现实生活中顽强生活着的残疾孤儿。其中有一个孩子，在手术后的那一年，终于有机会可以站起来了。那时候她还不满三岁。当我看到她第一次站起来，我很感动，也很骄傲，这个“黑姑娘”干了一件痛快的事。\n\n是的，我说出了金额。我知道，一定会有人说“捐那么少，还好意思报数”。我相信现在大部分人都不愿意公布捐款金额，因为捐款已经不再是一件随心的行动，而是成为大家根据金额的多少来衡量爱心的大小。我相信在座的各位也一定有过朋友之间随份子该给多少才合适的烦恼。我之所以说出来，不仅仅是因为我不觉得随性的行为需要躲闪，更因为“爱的骂骂”是每一个留言人的镜子。当时骂过我的人，也许，在两年后的今天听到我说的这番话，会想起曾经不太善意的留言却给了这些孩子们机会获得新生。这同样值得高兴。\n\n其实我们每个人都有不同阶段的新生，不是吗?“爱的骂骂”发出的那一刻，我如重生般释然了。虽然，我不像很多演员那样，拥有令人赞叹的表演才华，自己也觉得不是天生吃这碗饭的，但是既然选择了演员这份职业，我相信只要通过自己的努力和善待他人，就可以让自己的家人和自己过上幸福美满的生活。\n\n然而这一切，在2013年的夏天被一句开创演艺界(网络)暴力先河的“滚出娱乐圈”所动摇。我是第一个(被)放在主语位置的人。袁姗姗这个名字好像从此就和“一无是处”划上了等号。那个时候，不管说什么、做什么、演什么都不对。更有媒体总结了“袁姗姗不被观众所喜欢的五大理由”，第一条理由是“没有理由”。这是得有多深厚的感情基础，才能达到的境界。\n\n2013年确实挺让人操心的，从春天到夏天都没有平静过。一开始，我也有些懊恼，不知道到底发生了什么。我既然没有不劳而获，也没有做过伤天害理的事。为什么让我“滚”?!没多久，我想明白了一个道理，谁都可以说我不好，但是自己必须接纳那个心安理得的自己。既然我的演艺生涯要倒数开始，那我之后的每一点进步都是充满喜悦的。从零分到六十分比从满分到六十分，哪个更让人开心呢?\n\n也是从那个时候，我重拾扔下了多年的小提琴，还有健身。运动让我心情愉悦。不工作的时候，练琴和健身会让我的每一天都过得很充实，根本没有过多的时间停留在网上，更顾不上网友的围观。我建议那些沉迷于网络的年轻人，每天可以挤出一点时间锻炼身体。当有朝一日被他人欺负的时候，至少可以像我一样，身轻如燕，自由翻滚。\n\n不尽人意的2013年确实过得有些艰辛，但是我也时刻提醒着自己，别忘了尽可能给予所能达到的人以温暖。这是对鼓励过你的人最好的感激方式。但同时，我们也不要忽略身边朋友向你发出的求助信号。也许你的关心会改变他的决定。\n\n我在来之前了解到几个数据。在美国，有40%的年轻人遭遇过网络欺凌侵害，甚至有些受害者因此而患上精神疾病，身心受损。联合国儿童基金会在2014年的9月发布了一则消息报道，在法国，6到18岁之间的青少年有12.5%的人都有过在网上被攻击的经历。在中国，因为网络暴力而结束生命的人，离我们的生活越来越近。\n\n前不久，在台湾，有一位艺人因为网络暴力而自杀。听到这个消息的时候，我非常惋惜。我不知道她内心到底挣扎了多久。但当我看到这则新闻的时候，我有过一念之间的不安。如果在这之前，我可以跟她说几句话，她是不是好过一些?\n\n互联网的时代，让人与人之间的沟通方式越来越便捷，沟通成本却越来越大。足不出户在网上匿名可以干很多事，每天都要面对接踵而来的海量信息，有谁还愿意费力去核实消息的真实性，也不会有太多人会为自己发出或转发的信息而深思熟虑。那还有多少人会为他人的生命叹息呢?\n\n语言不应该成为致命的利器。网络的诞生也不应该是为了制造困扰，而是为了让生活变得更加美好。作为过去也许将来还会遭遇网络暴力的过来人，我不希望再有人因为网络暴力而受到伤害。请善用语言，让人言可敬。\n\n特别感谢在那段特殊时间陪伴我的家人和朋友，感谢他们承受住了一个当时还没有来得及减肥、各方面份量都很重的我。经历了这些，并不是想说明自己有多强大，但确实因为这些切身经历让我有了足够的时间去思考。我曾经问过自己一个问题——如果我当时真的不堪重负放弃了演员这个职业，是否网络暴力就会消失？答案当然不会。既然还是要面对，就应该积极面对。\n\n前不久，我参与了一部公益电影的拍摄。电影传递了一个非常积极的理念：每个人都有自由选择的机会和权利，无论你生下来是幸运的还是不幸的。我非常赞同，所以我选择做一个积极快乐的自己，不再受控于网络暴力中，不再只能看到消极的一面。\n\n都说做公益是在帮助他人，在我身上，成全了一个更加快乐的自己。不知道大家有没有看过这部电影。电影的名字叫《有一天》。我想在这里特别推荐一下。虽然我只参演了电影的一部分，但也给我带来了很多启发和感动。这部电影关注了九类特殊儿童群体。我参与拍摄的故事和聋哑儿童有关。跟我一起搭档演出的也是一名聋哑儿童。拍摄之前，我还有些顾虑，我不知道该怎么去跟他交流，我担心会因为自己不小心的举动伤害到他。但是见面之后，我才发现成年人的世界真的是因为想太多了变得复杂。只要我们保持一颗平常的心，用平等的方式去交流，就不会存在特别的障碍。重要的是你怎么看，而不是他怎么想。\n\n拍摄的那几天，我平静而快乐。每当完成一个镜头，这个小少年都会跟我竖起大拇指示意。他这个小小的举动也提醒了我和我们，有人选择赞美有人则不。\n\n感谢“爱的骂骂”，感谢《有一天》，感谢喝倒彩时刻提醒我的人，感谢一直鼓励我的家人和朋友，感谢倔强中的那个自己。我希望能有更多的人可以像我一样，主动地从逆境中走出来。这个世界还有很多需要我们关心的事去做，需要我们关心的人去爱。保持自己的真实，倔强地活下去。\n\n感谢大家的聆听，感谢网络世界将我带到你们面前。\n\n&nbsp;","slug":"protect-yourself-in-network","published":1,"updated":"2015-11-23T03:09:10.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xuswq001558u32p8jsfnq"},{"title":"Navicat 10.1.7 的注册码","id":"107","date":"2014-12-28T13:23:42.000Z","_content":"\n> NAVN-LNXG-XHHX-5NOO \n> 名和组织随便写。","source":"_posts/navicat-10-1-7-key.md","raw":"title: Navicat 10.1.7 的注册码\ntags:\n  - mysql\n  - navicat\nid: 107\ncategories:\n  - MySQL\ndate: 2014-12-28 21:23:42\n---\n\n> NAVN-LNXG-XHHX-5NOO \n> 名和组织随便写。","slug":"navicat-10-1-7-key","published":1,"updated":"2015-11-23T02:50:13.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xuswy001g58u3ukn77s9e"},{"title":"修改 wamp 中 mysql 默认空密码","id":"229","date":"2015-07-31T15:32:13.000Z","_content":"\n```sql\nuse mysql\n\nupdate user set password=PASSWORD('hooray') where user='root';\n\nflush privileges;\n```","source":"_posts/modify-wamp-mysql-password.md","raw":"title: 修改 wamp 中 mysql 默认空密码\ntags:\n  - mysql\n  - paswword\nid: 229\ncategories:\n  - MySQL\ndate: 2015-07-31 23:32:13\n---\n\n```sql\nuse mysql\n\nupdate user set password=PASSWORD('hooray') where user='root';\n\nflush privileges;\n```","slug":"modify-wamp-mysql-password","published":1,"updated":"2015-11-23T02:59:25.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusx3001l58u36ew314w2"},{"title":"GIT - remember password in window & linux.","date":"2015-11-23T02:46:44.000Z","_content":"\n# Window\n\n```sh\n# 因为 window 不允许之间新建 . 开头的文件，所以使用 mv 的方式\nmv git-credentials .git-credentials\n```\n\n然后编辑 **.git-credentials**\n```\n# github 是这样的格式\nhttps://{username}:{password}@github.com \n\n# git.oschina.net 是这样的\nhttps://{username}:{password}@git.oschina.net\n```\n\n最后一步是\n```sh\ngit config --global credential.helper store\n```\n\n# Linux\n\n> 在此之前或许要添加 ssh-key (https://help.github.com/articles/generating-ssh-keys/#platform-linux)\n\n```\n$ git config --global credential.helper cache\n# 默认缓存密码15分钟，可以改得更长, 比如1小时\n$ git config --global credential.helper 'cache --timeout=3600'\n```","source":"_posts/git-remember-password-in-window-and-linux.md","raw":"title: GIT - remember password in window & linux.\ntags:\n  - git\n  - 记住密码\ncategories:\n  - GIT\ndate: 2015-11-23 10:46:44\n---\n\n# Window\n\n```sh\n# 因为 window 不允许之间新建 . 开头的文件，所以使用 mv 的方式\nmv git-credentials .git-credentials\n```\n\n然后编辑 **.git-credentials**\n```\n# github 是这样的格式\nhttps://{username}:{password}@github.com \n\n# git.oschina.net 是这样的\nhttps://{username}:{password}@git.oschina.net\n```\n\n最后一步是\n```sh\ngit config --global credential.helper store\n```\n\n# Linux\n\n> 在此之前或许要添加 ssh-key (https://help.github.com/articles/generating-ssh-keys/#platform-linux)\n\n```\n$ git config --global credential.helper cache\n# 默认缓存密码15分钟，可以改得更长, 比如1小时\n$ git config --global credential.helper 'cache --timeout=3600'\n```","slug":"git-remember-password-in-window-and-linux","published":1,"updated":"2015-11-27T02:58:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusx7001q58u3844j2s8i"},{"title":"战舰少女基础知识及部分公式","date":"2016-02-22T16:07:25.000Z","_content":"\n## 类型\n类型|缩写|特点|\n-|-|-|\n战列舰|BB|大炮巨舰的典范，高火力、高血量、高护甲。是游戏中后期推图的主力。\n战列巡洋舰|BC|战列舰的缩减版本，火力、血量、护甲略低于战列舰，拥有相对高的防空属性，优点是全部是高速舰，推图上有优势。\n正规航母|CV|高索敌，有开幕战，多一轮攻击，受装备影响大，夜间无法攻击。\n轻型航母|CVL|正规航母的缩水版，装甲低下，可反潜，搭载数量低，作用是前期舰队补充。\n浅水重炮舰|BM|游戏中只有两艘，火力高，可以装长距离的主炮，白天可以来两发，消耗低，本来可以用来打捞保姆，之后有改过，护甲变低，基本上没人用了。\n潜艇|SS|同样为数不多，低闪避，高鱼雷，只有具备反潜能力的舰船才能打到，夜战能力高!升到11级后有开幕雷击的能力。\n重巡洋舰|CA|夜战优秀，闪避中上，部分能够发射鱼雷，消耗较，欺负小学生的神器。\n轻巡洋舰|CL|大部分反潜优秀，属性在重巡和驱逐之间，闪避出色，依旧适合欺负小学生。\n驱逐舰|DD|属性低，消耗低，闪避高，夜战出色，鱼雷战优秀。小学生作为入门舰船，也是必须练的船，一般用来推图带路和完成远征的特定条件。\n\n> **炮潜**\n>在2015夏季活动中加入的新舰船—絮库夫的舰船种类，虽然会潜水，但是却没有开幕雷击，没多大用处。  \n\n> **补给舰**\n>目前唯一一艘**苏赫巴托尔**，萌萌哒，幸运高，闪避高，技能可以打捞到更好的船，1-5通关奖励。\n\n## 驱逐\n> 空想、绫波、Z1、萤火虫、Z31、Z16、晓、响、雷、电、敷波和标枪\n\n> 高星稀有驱逐: 塔什干、奥班农、拉菲等\n\n> 以及Z系的其他驱逐\n\n## 战列\n-|名称\n-|-\n改造战列|威尔士亲王改、俾斯麦改、罗德尼改、安德烈亚多利亚改、纳尔逊改、内华达改、俄克拉荷马改\n高星稀有|黎塞留、前卫、提尔比茨、华盛顿\n四星|科罗拉多、马里兰，西弗吉尼亚\n\n## 轻巡\n名称|特点\n-|-\n海伦娜改|可以给全队增加索敌和命中\n夕张改|觉醒技能后，可以使性能提升很多\n奥希金斯改|\n宁海改|经验宝宝，技能可以增加战斗经验\n平海改|\n天龙改|\n> 5星轻巡天狼星，贝尔法斯特  \n> 4星的基洛夫，以及中国船逸仙、重庆（曙光女神改）\n\n\n## 热门\n埃塞克斯，马汉，M1，睦月，企业号航母，狮，宁海，威奇塔改，拉菲，青叶\n\n## 公式\n-|第一|第二|产物\n-|-|-|-\n战列|400 80 650 130 | 630 600 650 230 | 黎塞留、前卫、安德烈亚多利亚、提尔比茨、俾斯麦、华盛顿\n航母轻母|400 600 600 400 |500 130 600 400 | 赤城、加贺、追赶者\n轻巡|200 30 200 100|130 130 130 130|贝尔法斯特、爱丁堡、逸仙、平海、宁海、基洛夫、埃姆登、莱比锡\n驱逐|130 30 130 30| 130 130 130 130|拉菲、空想、塔什干（拉菲用3663出货率还是蛮不错的）\n潜艇|30 60 60 30|250 30 250 30|大青花鱼\n\n\n## 常用公式产出分析\n1. 400 80 650 130(前卫公式)\n当前用的最多的战列公式，出所有战列，所有战巡，所有重巡，4星以上轻巡，重炮以及空想和拉菲这两艘驱逐;屏蔽了航母，轻母，其余轻巡，驱逐以及大青花鱼。\n\n2. 630 600 650 230(黑猫公式)\n据说是最容易出北宅和猫?出所有战列，所有战巡，所有重巡，重炮以及空想;屏蔽了航母，轻母，所有轻巡，其余驱逐以及大青花鱼。\n3. 400 600 600 400(标准航母公式)\n最早常见的航母公式，出航母，轻母，重巡，4星轻巡以及空想;屏蔽战列，战巡，其余轻巡，其余驱逐，重炮以及大青花鱼。\n\n4. 400 130 500 130(稀有轻巡公式)\n可以用来赌贝爷(贝尔法斯特)，当然其他4星轻巡也是可以的。出战巡，重巡，稀有轻巡，重炮以及空想;屏蔽战列，航母，轻母，3星以下轻巡，其余驱逐和大青花鱼。\n\n5. 500 130 600 400(航母公式)\n新型航母公式，相比标准航母公式，屏蔽了轻巡，一定程度上提高了吃喝、追赶的出货率。出航母，轻母，重巡以及空想;屏蔽其余战列，轻巡，重炮，其余驱逐以及大青花鱼。\n\n6. 130 30 130 30(小船通用公式)\n小船指得是轻巡驱逐潜艇。屏蔽其余舰种船只。如果要鱼的话30 60 60 30就够了。\n","source":"_posts/battleship-girls.md","raw":"title: 战舰少女基础知识及部分公式\ntags:\n  - 舰娘\ncategories:\n  - 舰娘\ndate: 2016-02-23 00:07:25\n---\n\n## 类型\n类型|缩写|特点|\n-|-|-|\n战列舰|BB|大炮巨舰的典范，高火力、高血量、高护甲。是游戏中后期推图的主力。\n战列巡洋舰|BC|战列舰的缩减版本，火力、血量、护甲略低于战列舰，拥有相对高的防空属性，优点是全部是高速舰，推图上有优势。\n正规航母|CV|高索敌，有开幕战，多一轮攻击，受装备影响大，夜间无法攻击。\n轻型航母|CVL|正规航母的缩水版，装甲低下，可反潜，搭载数量低，作用是前期舰队补充。\n浅水重炮舰|BM|游戏中只有两艘，火力高，可以装长距离的主炮，白天可以来两发，消耗低，本来可以用来打捞保姆，之后有改过，护甲变低，基本上没人用了。\n潜艇|SS|同样为数不多，低闪避，高鱼雷，只有具备反潜能力的舰船才能打到，夜战能力高!升到11级后有开幕雷击的能力。\n重巡洋舰|CA|夜战优秀，闪避中上，部分能够发射鱼雷，消耗较，欺负小学生的神器。\n轻巡洋舰|CL|大部分反潜优秀，属性在重巡和驱逐之间，闪避出色，依旧适合欺负小学生。\n驱逐舰|DD|属性低，消耗低，闪避高，夜战出色，鱼雷战优秀。小学生作为入门舰船，也是必须练的船，一般用来推图带路和完成远征的特定条件。\n\n> **炮潜**\n>在2015夏季活动中加入的新舰船—絮库夫的舰船种类，虽然会潜水，但是却没有开幕雷击，没多大用处。  \n\n> **补给舰**\n>目前唯一一艘**苏赫巴托尔**，萌萌哒，幸运高，闪避高，技能可以打捞到更好的船，1-5通关奖励。\n\n## 驱逐\n> 空想、绫波、Z1、萤火虫、Z31、Z16、晓、响、雷、电、敷波和标枪\n\n> 高星稀有驱逐: 塔什干、奥班农、拉菲等\n\n> 以及Z系的其他驱逐\n\n## 战列\n-|名称\n-|-\n改造战列|威尔士亲王改、俾斯麦改、罗德尼改、安德烈亚多利亚改、纳尔逊改、内华达改、俄克拉荷马改\n高星稀有|黎塞留、前卫、提尔比茨、华盛顿\n四星|科罗拉多、马里兰，西弗吉尼亚\n\n## 轻巡\n名称|特点\n-|-\n海伦娜改|可以给全队增加索敌和命中\n夕张改|觉醒技能后，可以使性能提升很多\n奥希金斯改|\n宁海改|经验宝宝，技能可以增加战斗经验\n平海改|\n天龙改|\n> 5星轻巡天狼星，贝尔法斯特  \n> 4星的基洛夫，以及中国船逸仙、重庆（曙光女神改）\n\n\n## 热门\n埃塞克斯，马汉，M1，睦月，企业号航母，狮，宁海，威奇塔改，拉菲，青叶\n\n## 公式\n-|第一|第二|产物\n-|-|-|-\n战列|400 80 650 130 | 630 600 650 230 | 黎塞留、前卫、安德烈亚多利亚、提尔比茨、俾斯麦、华盛顿\n航母轻母|400 600 600 400 |500 130 600 400 | 赤城、加贺、追赶者\n轻巡|200 30 200 100|130 130 130 130|贝尔法斯特、爱丁堡、逸仙、平海、宁海、基洛夫、埃姆登、莱比锡\n驱逐|130 30 130 30| 130 130 130 130|拉菲、空想、塔什干（拉菲用3663出货率还是蛮不错的）\n潜艇|30 60 60 30|250 30 250 30|大青花鱼\n\n\n## 常用公式产出分析\n1. 400 80 650 130(前卫公式)\n当前用的最多的战列公式，出所有战列，所有战巡，所有重巡，4星以上轻巡，重炮以及空想和拉菲这两艘驱逐;屏蔽了航母，轻母，其余轻巡，驱逐以及大青花鱼。\n\n2. 630 600 650 230(黑猫公式)\n据说是最容易出北宅和猫?出所有战列，所有战巡，所有重巡，重炮以及空想;屏蔽了航母，轻母，所有轻巡，其余驱逐以及大青花鱼。\n3. 400 600 600 400(标准航母公式)\n最早常见的航母公式，出航母，轻母，重巡，4星轻巡以及空想;屏蔽战列，战巡，其余轻巡，其余驱逐，重炮以及大青花鱼。\n\n4. 400 130 500 130(稀有轻巡公式)\n可以用来赌贝爷(贝尔法斯特)，当然其他4星轻巡也是可以的。出战巡，重巡，稀有轻巡，重炮以及空想;屏蔽战列，航母，轻母，3星以下轻巡，其余驱逐和大青花鱼。\n\n5. 500 130 600 400(航母公式)\n新型航母公式，相比标准航母公式，屏蔽了轻巡，一定程度上提高了吃喝、追赶的出货率。出航母，轻母，重巡以及空想;屏蔽其余战列，轻巡，重炮，其余驱逐以及大青花鱼。\n\n6. 130 30 130 30(小船通用公式)\n小船指得是轻巡驱逐潜艇。屏蔽其余舰种船只。如果要鱼的话30 60 60 30就够了。\n","slug":"battleship-girls","published":1,"updated":"2016-02-22T16:15:36.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusxf001x58u3kz5bl55z"},{"title":"Baseview in Backbone","date":"2015-11-12T16:36:15.000Z","_content":"## 前言\n今天研究了好久的 Backbone，一直搞不明白，怎么通过 router 的改变来切换 view。\n\n## 过程跌宕起伏\n\n事情是这样的，都知道 backbone 有 model, collection, view, router 这些基本概念，今天我要写一个简单的网页，有两个 nav 项，因为用了 backbone，自然就想到了单页应用，就是单击其中某一个的时候，显示这一个 nav 项对应的内容。\n\n这就用到了 router 的事件，每当 router 改变时，重新 render 整个页面。（我是这么想的，也不是整个，router 变了有些内容必然会跟着变。）\n\n```js\nvar appView = this;\nBackbone.history.on('route', function (router, name) {\n    console.log('current route:', name);\n    appView.render();\n});\n```\n\n另外，在 router 里面我定义了一个变量，用来表明哪一个 nav 项被点击。\n```js\nBackbone.Router.extend({\n\n    // ... other methods\n\n    routes: {\n        '': 'chat', // default to #chat\n        'chat': 'chat',\n        'broadcast': 'broadcast',\n        '*nothingMatched': 'pageNotFoundRoute' // 404\n    },\n\n    chat: function () {\n        console.log(\"chat page loaded.\");\n        window.App.currentRouter = 'chat';\n    },\n\n    broadcast: function () {\n        console.log('broadcast page loaded.');\n        window.App.currentRouter = 'broadcast';\n    },\n\n    pageNotFoundRoute: function() {\n        console.log('pageNotFoundRoute');\n    }\n\n});\n```\n\n事实证明，我的想法是有一点点正确的，因为运行顺序是这样的：\n```bash\nin appView initialize.\ndoctor-router.js:11 Route initialize\ndoctor-router.js:22 chat page loaded.    # 首先，进入 router 的处理方法\napp.js:31 current route: chat            # 然后，响应 router 的 change 事件\napp.js:58 in appView render.             # 最后，appView 的 render 方法根据 route name\n                                         # render对应的 view\n```\n\nrender 的时候，首先要 **remove** 当前的view，然后 render 新的view。我是这么写的：\n```js\nif (this.siderView) {\n    // 删掉当前的\n    this.siderView.remove();\n}\n\nif (App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\n// render 新的 view\nthis.siderView.render();\n```\n\n运行之后我发现，这样点击下一个 nav 的时候， view 变成了空白的。后来审查元素，发现 el 那个节点整个被删掉了，因为他们两个共同放在同一个 el 下面。\n```js\n// view 1\nvar DoctorProfileView = Backbone.View.extend({\n    el: '.left_aside',\n    className:  'doctor_profile'\n    // ...\n});\n\n// view 2\nvar ChatSiderView = BaseView.extend({\n    el: '.left_aside',\n    // ...\n});\n```\n\n因为是新手，而且这是第一次用 backbone，所以还不知道 $el 就是 juqery 对象（其实问题不在这里），所以我就开始了漫无目的的搜索。\n\n其实办法肯定是有的，就是让他俩不共用同一个 el 节点，每次 render 完了之后，添加到要显示的地方，remove 的时候也只会删掉他自己，况且还可以用 hide。\n\n## 有了一线希望\n\n终于，我看到网上有人写了这么一句：\n```js\nthis.$el.empty();\n```\n\n然后我顺藤摸瓜看起了 backbone 的源代码：\n```js\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      _.extend(this, _.pick(options, viewOptions));\n      this._ensureElement();\n      this.initialize.apply(this, arguments);\n  };\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n      if (!this.el) {\n        // ...\n        // omit this because we pass 'el' as options to the View.\n        // ...\n      } else {\n          this.setElement(_.result(this, 'el'));\n      }\n  }\n\n  // Change the view's element (`this.el` property) and re-delegate the\n  // view's events on the new element.\n  setElement: function (element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n  }\n\n  // Creates the `this.el` and `this.$el` references for this view using the\n  // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n  // context or an element. Subclasses can override this to utilize an\n  // alternative DOM manipulation API and are only required to set the\n  // `this.el` property.\n  _setElement: function (el) {\n      this.$el = el instanceof Backbone.$\n               ? el\n               : Backbone.$(el);\n      this.el = this.$el[0];\n  }\n```\n\n上面这一段就是说，如果我们传入了 el 那么 backbone 会自动设置 $el（通过命名就能看出这是一个 jquery 对象咯）, 并且绑定我们在 events 定义的事件到这上面。\n\n然后还有 backbone 的 remove view 的方法：\n```js\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n      this._removeElement();\n      this.stopListening();\n      return this;\n  },\n\n  // Remove this view's element from the document and all event listeners\n  // attached to it. Exposed for subclasses using an alternative DOM\n  // manipulation API.\n  _removeElement: function () {\n      this.$el.remove();\n  }\n```\n\n解除事件监听，删掉元素。\n\n## 最终的 hide 方法\n\n于是，我模仿着写了一个 hide 方法：\n```js\n  hide: function () {\n      this.undelegateEvents();\n      this.$el.empty();\n      this.stopListening();\n  }\n```\n好像很简单，哈哈， 顺便把 appView 里面也改掉：\n```js\nif (this.siderView) {\n    this.siderView.hide();\n}\n\nif (!App.currentRouter || App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\nthis.siderView.render();\n```\n运行之后，切换 view 正常了。耶！\n\n然后我想让我的view 都具有 hide 这个方法，恰好 backbone 很好的面向对象，于是：\n```js\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n\n    var BaseView = Backbone.View.extend({\n\n        hide: function () {\n            this.undelegateEvents();\n            this.$el.empty();\n            this.stopListening();\n        }\n\n    });\n\n    return BaseView;\n\n});\n\n// how to use\nvar ChatSiderView = BaseView.extend({\n\n    el: '.left_aside',\n\n    //...\n});\n```\n\n感觉非常顺畅。\n\n## 后记\n频繁的删除dom元素，速度肯定是慢的，恰好我的网页很简单，所以看不出明显的缺点，网上也是推荐使用 `display：none` 和 `display：block` 来切换 view， 等我以后再研究吧。\n\n以上。\n","source":"_posts/baseview-in-backbone.md","raw":"title: Baseview in Backbone\ntags:\n  - backbone\n  - base\n  - view\ncategories:\n  - Backbone\ndate: 2015-11-13 00:36:15\n---\n## 前言\n今天研究了好久的 Backbone，一直搞不明白，怎么通过 router 的改变来切换 view。\n\n## 过程跌宕起伏\n\n事情是这样的，都知道 backbone 有 model, collection, view, router 这些基本概念，今天我要写一个简单的网页，有两个 nav 项，因为用了 backbone，自然就想到了单页应用，就是单击其中某一个的时候，显示这一个 nav 项对应的内容。\n\n这就用到了 router 的事件，每当 router 改变时，重新 render 整个页面。（我是这么想的，也不是整个，router 变了有些内容必然会跟着变。）\n\n```js\nvar appView = this;\nBackbone.history.on('route', function (router, name) {\n    console.log('current route:', name);\n    appView.render();\n});\n```\n\n另外，在 router 里面我定义了一个变量，用来表明哪一个 nav 项被点击。\n```js\nBackbone.Router.extend({\n\n    // ... other methods\n\n    routes: {\n        '': 'chat', // default to #chat\n        'chat': 'chat',\n        'broadcast': 'broadcast',\n        '*nothingMatched': 'pageNotFoundRoute' // 404\n    },\n\n    chat: function () {\n        console.log(\"chat page loaded.\");\n        window.App.currentRouter = 'chat';\n    },\n\n    broadcast: function () {\n        console.log('broadcast page loaded.');\n        window.App.currentRouter = 'broadcast';\n    },\n\n    pageNotFoundRoute: function() {\n        console.log('pageNotFoundRoute');\n    }\n\n});\n```\n\n事实证明，我的想法是有一点点正确的，因为运行顺序是这样的：\n```bash\nin appView initialize.\ndoctor-router.js:11 Route initialize\ndoctor-router.js:22 chat page loaded.    # 首先，进入 router 的处理方法\napp.js:31 current route: chat            # 然后，响应 router 的 change 事件\napp.js:58 in appView render.             # 最后，appView 的 render 方法根据 route name\n                                         # render对应的 view\n```\n\nrender 的时候，首先要 **remove** 当前的view，然后 render 新的view。我是这么写的：\n```js\nif (this.siderView) {\n    // 删掉当前的\n    this.siderView.remove();\n}\n\nif (App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\n// render 新的 view\nthis.siderView.render();\n```\n\n运行之后我发现，这样点击下一个 nav 的时候， view 变成了空白的。后来审查元素，发现 el 那个节点整个被删掉了，因为他们两个共同放在同一个 el 下面。\n```js\n// view 1\nvar DoctorProfileView = Backbone.View.extend({\n    el: '.left_aside',\n    className:  'doctor_profile'\n    // ...\n});\n\n// view 2\nvar ChatSiderView = BaseView.extend({\n    el: '.left_aside',\n    // ...\n});\n```\n\n因为是新手，而且这是第一次用 backbone，所以还不知道 $el 就是 juqery 对象（其实问题不在这里），所以我就开始了漫无目的的搜索。\n\n其实办法肯定是有的，就是让他俩不共用同一个 el 节点，每次 render 完了之后，添加到要显示的地方，remove 的时候也只会删掉他自己，况且还可以用 hide。\n\n## 有了一线希望\n\n终于，我看到网上有人写了这么一句：\n```js\nthis.$el.empty();\n```\n\n然后我顺藤摸瓜看起了 backbone 的源代码：\n```js\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      _.extend(this, _.pick(options, viewOptions));\n      this._ensureElement();\n      this.initialize.apply(this, arguments);\n  };\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n      if (!this.el) {\n        // ...\n        // omit this because we pass 'el' as options to the View.\n        // ...\n      } else {\n          this.setElement(_.result(this, 'el'));\n      }\n  }\n\n  // Change the view's element (`this.el` property) and re-delegate the\n  // view's events on the new element.\n  setElement: function (element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n  }\n\n  // Creates the `this.el` and `this.$el` references for this view using the\n  // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n  // context or an element. Subclasses can override this to utilize an\n  // alternative DOM manipulation API and are only required to set the\n  // `this.el` property.\n  _setElement: function (el) {\n      this.$el = el instanceof Backbone.$\n               ? el\n               : Backbone.$(el);\n      this.el = this.$el[0];\n  }\n```\n\n上面这一段就是说，如果我们传入了 el 那么 backbone 会自动设置 $el（通过命名就能看出这是一个 jquery 对象咯）, 并且绑定我们在 events 定义的事件到这上面。\n\n然后还有 backbone 的 remove view 的方法：\n```js\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n      this._removeElement();\n      this.stopListening();\n      return this;\n  },\n\n  // Remove this view's element from the document and all event listeners\n  // attached to it. Exposed for subclasses using an alternative DOM\n  // manipulation API.\n  _removeElement: function () {\n      this.$el.remove();\n  }\n```\n\n解除事件监听，删掉元素。\n\n## 最终的 hide 方法\n\n于是，我模仿着写了一个 hide 方法：\n```js\n  hide: function () {\n      this.undelegateEvents();\n      this.$el.empty();\n      this.stopListening();\n  }\n```\n好像很简单，哈哈， 顺便把 appView 里面也改掉：\n```js\nif (this.siderView) {\n    this.siderView.hide();\n}\n\nif (!App.currentRouter || App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\nthis.siderView.render();\n```\n运行之后，切换 view 正常了。耶！\n\n然后我想让我的view 都具有 hide 这个方法，恰好 backbone 很好的面向对象，于是：\n```js\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n\n    var BaseView = Backbone.View.extend({\n\n        hide: function () {\n            this.undelegateEvents();\n            this.$el.empty();\n            this.stopListening();\n        }\n\n    });\n\n    return BaseView;\n\n});\n\n// how to use\nvar ChatSiderView = BaseView.extend({\n\n    el: '.left_aside',\n\n    //...\n});\n```\n\n感觉非常顺畅。\n\n## 后记\n频繁的删除dom元素，速度肯定是慢的，恰好我的网页很简单，所以看不出明显的缺点，网上也是推荐使用 `display：none` 和 `display：block` 来切换 view， 等我以后再研究吧。\n\n以上。\n","slug":"baseview-in-backbone","published":1,"updated":"2015-11-27T02:58:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusxk002258u3te8tgtin"},{"title":"use correct way to change view","date":"2015-11-17T15:42:24.000Z","_content":"","source":"_drafts/use-correct-way-to-change-view.md","raw":"title: use correct way to change view\ntags:\n  - backbone\ncategories:\n  - Backbone\ndate: 2015-11-17 23:42:24\n---\n","slug":"use-correct-way-to-change-view","published":0,"updated":"2016-02-22T15:48:41.076Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusxr002b58u3qn2plun6"},{"title":"underscore in action","_content":"underscore","source":"_drafts/underscore-in-action.md","raw":"title: underscore in action\ntags:\n  - underscore\n  - _\ncategories:\n  - Underscore\n---\nunderscore","slug":"underscore-in-action","published":0,"date":"2015-11-29T12:21:39.100Z","updated":"2015-11-29T12:21:39.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusxv002e58u39g7v9c31"},{"title":"hexo in action","_content":"Hexo","source":"_drafts/hexo-in-action.md","raw":"title: hexo in action\ntags:\n  - hexo\ncategories:\n  - Hexo\n---\nHexo","slug":"hexo-in-action","published":0,"date":"2015-11-29T12:21:42.434Z","updated":"2015-11-29T12:21:42.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusy2002l58u3cxc7zhuv"},{"title":"git in action","_content":"\n# git 的工作流\n\n```sh\ngit-flow feature start cs_send_message_to_doctor\n```\n\n# branch\n\n# stash\n* git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\n* git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\n* git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\n* git stash clear: 清空Git栈。\n* git stash apply stash@{n}: 恢复到第 n 个\n\n### git stash apply 的例子\n```shell\n$ git stash list\nstash@{0}: WIP on master: e95dc37 Require administrator authority...\nstash@{1}: WIP on md_develop: fcaa18f Add an object to recieve md...\n\n$ git stash apply stash@{1}\n```\n\n> 而且，pop 出来的内容只是你上次 stash 时候的内容，在这之间，如果对stash的文件做了修改，`stash pop` 之后就没了。  \n\n> 所以在 `stash pop` 之前尽量`commit`一下，然后用 `cherry-pick` 来通过增量的方法将修复的内容合并到新版本上，如果有冲突需要手动解决。\n\n# fetch 和 pull 的区别\n\n# cherry-pick\n\n# revert 和 reset\n- git revert 是撤销某次操作，此次操作之前的commit都会被保留\n- git reset 是撤销某次提交，但是此次之后的修改都会被退回到暂存区","source":"_drafts/git-in-action.md","raw":"title: git in action\ntags:\n  - git\ncategories:\n  - GIT\n---\n\n# git 的工作流\n\n```sh\ngit-flow feature start cs_send_message_to_doctor\n```\n\n# branch\n\n# stash\n* git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\n* git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\n* git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\n* git stash clear: 清空Git栈。\n* git stash apply stash@{n}: 恢复到第 n 个\n\n### git stash apply 的例子\n```shell\n$ git stash list\nstash@{0}: WIP on master: e95dc37 Require administrator authority...\nstash@{1}: WIP on md_develop: fcaa18f Add an object to recieve md...\n\n$ git stash apply stash@{1}\n```\n\n> 而且，pop 出来的内容只是你上次 stash 时候的内容，在这之间，如果对stash的文件做了修改，`stash pop` 之后就没了。  \n\n> 所以在 `stash pop` 之前尽量`commit`一下，然后用 `cherry-pick` 来通过增量的方法将修复的内容合并到新版本上，如果有冲突需要手动解决。\n\n# fetch 和 pull 的区别\n\n# cherry-pick\n\n# revert 和 reset\n- git revert 是撤销某次操作，此次操作之前的commit都会被保留\n- git reset 是撤销某次提交，但是此次之后的修改都会被退回到暂存区","slug":"git-in-action","published":0,"date":"2015-11-30T03:33:09.314Z","updated":"2015-11-30T03:33:09.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusy6002q58u38vn9x23n"},{"title":"backbone router and view","date":"2015-12-16T08:04:54.000Z","_content":"","source":"_drafts/backbone-router-and-view.md","raw":"title: backbone router and view\ntags:\n  - backbone\n  - router\n  - view\ncategories:\n  - Backbone\ndate: 2015-12-16 16:04:54\n---\n","slug":"backbone-router-and-view","published":0,"updated":"2016-02-22T15:48:41.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusya002t58u3205yzsbv"},{"title":"backbone in action","_content":"backbone","source":"_drafts/backbone-in-action.md","raw":"title: backbone in action\ntags:\n  - backbone\ncategories:\n  - Backbone\n---\nbackbone","slug":"backbone-in-action","published":0,"date":"2015-11-29T12:21:07.750Z","updated":"2015-11-29T12:21:07.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cil3xusyd002z58u31dwt9h15"}],"PostAsset":[],"PostCategory":[{"post_id":"cil3xusvb000458u3xb0mk6ox","category_id":"cil3xusvi000558u3xvh7gea1","_id":"cil3xusvl000858u3ak57py42"},{"post_id":"cil3xusvp000b58u3qws8rmty","category_id":"cil3xusvr000c58u36tjzbqok","_id":"cil3xusvt000f58u3be5d44qs"},{"post_id":"cil3xusvy000k58u3c5ea76sa","category_id":"cil3xusw0000l58u39dhdwpy2","_id":"cil3xusw1000o58u36ahcouep"},{"post_id":"cil3xusw4000r58u3gjcthh5t","category_id":"cil3xusvr000c58u36tjzbqok","_id":"cil3xusw6000s58u3xvcqs85o"},{"post_id":"cil3xuswj001158u3dvnr6p25","category_id":"cil3xusvr000c58u36tjzbqok","_id":"cil3xuswn001258u3hszgduyw"},{"post_id":"cil3xuswq001558u32p8jsfnq","category_id":"cil3xuswr001658u34g3pk0t3","_id":"cil3xuswu001958u3no0m47ao"},{"post_id":"cil3xuswy001g58u3ukn77s9e","category_id":"cil3xusw0000l58u39dhdwpy2","_id":"cil3xusx0001h58u36dkdlswn"},{"post_id":"cil3xusx3001l58u36ew314w2","category_id":"cil3xusw0000l58u39dhdwpy2","_id":"cil3xusx5001m58u3poz7a6my"},{"post_id":"cil3xusx7001q58u3844j2s8i","category_id":"cil3xusx9001r58u3cl93ogau","_id":"cil3xusxd001u58u3fv5zy1vk"},{"post_id":"cil3xusxf001x58u3kz5bl55z","category_id":"cil3xusxg001y58u3dgits05a","_id":"cil3xusxh002158u38hgpoei4"},{"post_id":"cil3xusxk002258u3te8tgtin","category_id":"cil3xusxm002358u300kgty0d","_id":"cil3xusxo002658u3mnna7n4u"},{"post_id":"cil3xusxr002b58u3qn2plun6","category_id":"cil3xusxm002358u300kgty0d","_id":"cil3xusxs002c58u3rlexcbtm"},{"post_id":"cil3xusxv002e58u39g7v9c31","category_id":"cil3xusxx002f58u3o1udh1xf","_id":"cil3xusy0002i58u3he8f4e7e"},{"post_id":"cil3xusy2002l58u3cxc7zhuv","category_id":"cil3xusy4002m58u3jiu961io","_id":"cil3xusy5002p58u36gvlsn7p"},{"post_id":"cil3xusy6002q58u38vn9x23n","category_id":"cil3xusx9001r58u3cl93ogau","_id":"cil3xusy8002r58u3jok7noed"},{"post_id":"cil3xusya002t58u3205yzsbv","category_id":"cil3xusxm002358u300kgty0d","_id":"cil3xusyb002u58u39qbxyavj"},{"post_id":"cil3xusyd002z58u31dwt9h15","category_id":"cil3xusxm002358u300kgty0d","_id":"cil3xusye003058u3dvj9i28a"}],"PostTag":[{"post_id":"cil3xusvb000458u3xb0mk6ox","tag_id":"cil3xusvi000658u3716yfnsu","_id":"cil3xusvm000958u3gi7lvs73"},{"post_id":"cil3xusvb000458u3xb0mk6ox","tag_id":"cil3xusvl000758u3lyijlsig","_id":"cil3xusvn000a58u326vgeldb"},{"post_id":"cil3xusvp000b58u3qws8rmty","tag_id":"cil3xusvs000d58u3dpipvte4","_id":"cil3xusvv000h58u3hmtonz4p"},{"post_id":"cil3xusvp000b58u3qws8rmty","tag_id":"cil3xusvt000e58u3tkqkrffq","_id":"cil3xusvv000i58u3ugqhu85g"},{"post_id":"cil3xusvp000b58u3qws8rmty","tag_id":"cil3xusvu000g58u38fltm10w","_id":"cil3xusvv000j58u3hll2o67h"},{"post_id":"cil3xusvy000k58u3c5ea76sa","tag_id":"cil3xusw0000m58u3mnl5kz8w","_id":"cil3xusw2000p58u3zqxy6q0l"},{"post_id":"cil3xusvy000k58u3c5ea76sa","tag_id":"cil3xusw1000n58u34kmg84f9","_id":"cil3xusw2000q58u354k7flxm"},{"post_id":"cil3xusw4000r58u3gjcthh5t","tag_id":"cil3xusw7000t58u3tfpeus3i","_id":"cil3xusw9000x58u3zfaet95n"},{"post_id":"cil3xusw4000r58u3gjcthh5t","tag_id":"cil3xusw7000u58u32mnjxukl","_id":"cil3xusw9000y58u3kkpbowyt"},{"post_id":"cil3xusw4000r58u3gjcthh5t","tag_id":"cil3xusw8000v58u3nz3bf480","_id":"cil3xuswa000z58u3lbepc9fv"},{"post_id":"cil3xusw4000r58u3gjcthh5t","tag_id":"cil3xusw8000w58u3dhivhjza","_id":"cil3xuswa001058u3aurzdv8z"},{"post_id":"cil3xuswj001158u3dvnr6p25","tag_id":"cil3xuswo001358u3l4sm3blb","_id":"cil3xuswo001458u3scxh5ubv"},{"post_id":"cil3xuswq001558u32p8jsfnq","tag_id":"cil3xuswr001758u3qhobmc6m","_id":"cil3xusww001c58u3s23znzw3"},{"post_id":"cil3xuswq001558u32p8jsfnq","tag_id":"cil3xuswt001858u3sk192o7q","_id":"cil3xusww001d58u3nlg4iiy2"},{"post_id":"cil3xuswq001558u32p8jsfnq","tag_id":"cil3xuswu001a58u3tg51q29v","_id":"cil3xuswx001e58u3qovrr1oa"},{"post_id":"cil3xuswq001558u32p8jsfnq","tag_id":"cil3xusww001b58u3dkv42ddr","_id":"cil3xuswx001f58u3takobdc7"},{"post_id":"cil3xuswy001g58u3ukn77s9e","tag_id":"cil3xusw0000m58u3mnl5kz8w","_id":"cil3xusx1001j58u3ik0xkb43"},{"post_id":"cil3xuswy001g58u3ukn77s9e","tag_id":"cil3xusx0001i58u3ocu2j7du","_id":"cil3xusx1001k58u36g426vxs"},{"post_id":"cil3xusx3001l58u36ew314w2","tag_id":"cil3xusw0000m58u3mnl5kz8w","_id":"cil3xusx6001o58u3bwtgo7iw"},{"post_id":"cil3xusx3001l58u36ew314w2","tag_id":"cil3xusx5001n58u3ugx17kis","_id":"cil3xusx6001p58u3q5xi8es3"},{"post_id":"cil3xusx7001q58u3844j2s8i","tag_id":"cil3xusxa001s58u3lwfis9sw","_id":"cil3xusxd001v58u3k5snahjz"},{"post_id":"cil3xusx7001q58u3844j2s8i","tag_id":"cil3xusxb001t58u3u3dy6391","_id":"cil3xusxd001w58u3o1v716g5"},{"post_id":"cil3xusxf001x58u3kz5bl55z","tag_id":"cil3xusxg001z58u38molaagl","_id":"cil3xusxh002058u3ta4buyq9"},{"post_id":"cil3xusxk002258u3te8tgtin","tag_id":"cil3xusxn002458u34dpra15v","_id":"cil3xusxo002858u3syydnkki"},{"post_id":"cil3xusxk002258u3te8tgtin","tag_id":"cil3xusxo002558u3h5ee73i1","_id":"cil3xusxp002958u3g40c20zv"},{"post_id":"cil3xusxk002258u3te8tgtin","tag_id":"cil3xusxo002758u3l42f5279","_id":"cil3xusxp002a58u3kqpp4ala"},{"post_id":"cil3xusxr002b58u3qn2plun6","tag_id":"cil3xusxn002458u34dpra15v","_id":"cil3xusxt002d58u3mzj3lho0"},{"post_id":"cil3xusxv002e58u39g7v9c31","tag_id":"cil3xusxx002g58u35q1wkaet","_id":"cil3xusy0002j58u326n1w7ib"},{"post_id":"cil3xusxv002e58u39g7v9c31","tag_id":"cil3xusxz002h58u3g9r338m7","_id":"cil3xusy0002k58u3w2ygudr5"},{"post_id":"cil3xusy2002l58u3cxc7zhuv","tag_id":"cil3xusy4002n58u35e1fhfbk","_id":"cil3xusy5002o58u39prs3xm4"},{"post_id":"cil3xusy6002q58u38vn9x23n","tag_id":"cil3xusxa001s58u3lwfis9sw","_id":"cil3xusy9002s58u3qyrjcjug"},{"post_id":"cil3xusya002t58u3205yzsbv","tag_id":"cil3xusxn002458u34dpra15v","_id":"cil3xusyc002w58u3699twt8x"},{"post_id":"cil3xusya002t58u3205yzsbv","tag_id":"cil3xusyb002v58u3ovf88kg4","_id":"cil3xusyc002x58u3jsmg1ysh"},{"post_id":"cil3xusya002t58u3205yzsbv","tag_id":"cil3xusxo002758u3l42f5279","_id":"cil3xusyc002y58u3shkhj1ni"},{"post_id":"cil3xusyd002z58u31dwt9h15","tag_id":"cil3xusxn002458u34dpra15v","_id":"cil3xusye003158u3x32h3igy"}],"Tag":[{"name":"html","_id":"cil3xusvi000658u3716yfnsu"},{"name":"css","_id":"cil3xusvl000758u3lyijlsig"},{"name":"compatible module","_id":"cil3xusvs000d58u3dpipvte4"},{"name":"AMD","_id":"cil3xusvt000e58u3tkqkrffq"},{"name":"CMD","_id":"cil3xusvu000g58u38fltm10w"},{"name":"mysql","_id":"cil3xusw0000m58u3mnl5kz8w"},{"name":"中文乱码","_id":"cil3xusw1000n58u34kmg84f9"},{"name":"ts","_id":"cil3xusw7000t58u3tfpeus3i"},{"name":"date","_id":"cil3xusw7000u58u32mnjxukl"},{"name":"format","_id":"cil3xusw8000v58u3nz3bf480"},{"name":"js","_id":"cil3xusw8000w58u3dhivhjza"},{"name":"imgage error","_id":"cil3xuswo001358u3l4sm3blb"},{"name":"tedx","_id":"cil3xuswr001758u3qhobmc6m"},{"name":"在网络暴力中捍卫自己","_id":"cil3xuswt001858u3sk192o7q"},{"name":"演讲稿","_id":"cil3xuswu001a58u3tg51q29v"},{"name":"袁姗姗","_id":"cil3xusww001b58u3dkv42ddr"},{"name":"navicat","_id":"cil3xusx0001i58u3ocu2j7du"},{"name":"paswword","_id":"cil3xusx5001n58u3ugx17kis"},{"name":"git","_id":"cil3xusxa001s58u3lwfis9sw"},{"name":"记住密码","_id":"cil3xusxb001t58u3u3dy6391"},{"name":"舰娘","_id":"cil3xusxg001z58u38molaagl"},{"name":"backbone","_id":"cil3xusxn002458u34dpra15v"},{"name":"base","_id":"cil3xusxo002558u3h5ee73i1"},{"name":"view","_id":"cil3xusxo002758u3l42f5279"},{"name":"underscore","_id":"cil3xusxx002g58u35q1wkaet"},{"name":"_","_id":"cil3xusxz002h58u3g9r338m7"},{"name":"hexo","_id":"cil3xusy4002n58u35e1fhfbk"},{"name":"router","_id":"cil3xusyb002v58u3ovf88kg4"}]}}