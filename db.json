{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/ounn/source/green/index.html","path":"green/index.html","modified":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0},{"_id":"themes/ounn/source/impress/README.md","path":"impress/README.md","modified":1},{"_id":"themes/ounn/source/impress/oli.html","path":"impress/oli.html","modified":1},{"_id":"themes/ounn/source/impress/index.html","path":"impress/index.html","modified":1},{"_id":"themes/ounn/source/impress/favicon.png","path":"impress/favicon.png","modified":1},{"_id":"themes/ounn/source/impress/bower.json","path":"impress/bower.json","modified":1},{"_id":"themes/ounn/source/impress/apple-touch-icon.png","path":"impress/apple-touch-icon.png","modified":1},{"_id":"themes/strict/source/fonts/icon.woff","path":"fonts/icon.woff","modified":0},{"_id":"themes/strict/source/fonts/icon.ttf","path":"fonts/icon.ttf","modified":0},{"_id":"themes/strict/source/fonts/icon.svg","path":"fonts/icon.svg","modified":0},{"_id":"themes/strict/source/fonts/icon.eot","path":"fonts/icon.eot","modified":0},{"_id":"themes/strict/source/css/main.styl","path":"css/main.styl","modified":0}],"Cache":[{"_id":"source/404.html","shasum":"a4cbbe31bc83332167c22d0c80c8c3311cbb80ed","modified":1446889247180},{"_id":"source/_drafts/backbone-in-action.md","shasum":"4bbe3e4155bb92a17c5cecbfedc864b0cc2fac08","modified":1448799667750},{"_id":"source/_drafts/git-in-action.md","shasum":"83eedd4548d7130de2810124fc771f92cd57dc3c","modified":1448854389314},{"_id":"source/_drafts/hexo-in-action.md","shasum":"6f9416596207100ff0384dcbe4141809e99dd9b7","modified":1448799702434},{"_id":"source/_drafts/underscore-in-action.md","shasum":"25359a7e76794c5853ab6918bcf278b893d99b85","modified":1448799699100},{"_id":"source/_posts/backbone-router-and-view.md","shasum":"70d391c9eae7a28c741ee2ee4dfe8f14118d4887","modified":1450253322914},{"_id":"source/_posts/baseview-in-backbone.md","shasum":"f885428706520ccabcdcb3a1d13205bc82106330","modified":1448593128000},{"_id":"source/_posts/git-remember-password-in-window-and-linux.md","shasum":"da56f267e60aeb2c4e08485d6c8c40cd21f4bde8","modified":1448593114000},{"_id":"source/_posts/modify-wamp-mysql-password.md","shasum":"e6e021d2977ef4b1457da09032fe4ae0200266fb","modified":1448247565158},{"_id":"source/_posts/navicat-10-1-7-key.md","shasum":"658b481b8d975386ef75f6b7c31f103f453e8617","modified":1448247013501},{"_id":"source/_posts/protect-yourself-in-network.md","shasum":"5b0a2bf7ef90bc59deea95abe44d1491122530a8","modified":1448248150684},{"_id":"source/_posts/show-a-default-image-when-the-image-is-broken.md","shasum":"ea73292a6b4653ae80d2fc3e8ccbe7ca9eb4033a","modified":1448799487240},{"_id":"source/_posts/use-correct-way-to-change-view.md","shasum":"6e2351c346a511f46add307c5f5f1e2e3bf79b35","modified":1448249904517},{"_id":"source/_posts/use-js-to-convert-ts-to-data.md","shasum":"b6fff9da4273c1085d02e467c00d3affb5cb4a0c","modified":1449028162093},{"_id":"source/_posts/wamp-mysql-chinese-question-mark.md","shasum":"946a7f6656990ded7ecb1125b487e1b074adbce3","modified":1448247631083},{"_id":"source/_posts/write-a-compatible-js-module.md","shasum":"24853a140ea4ff416b604e07da5bc12368affee4","modified":1450253008385},{"_id":"source/_posts/wrong-clearfix-make-me-crazy.md","shasum":"3eed8e319b68488d45f5a3c8aff6d7c205c11b18","modified":1448593147000},{"_id":"source/about/index.md","shasum":"186904652c5c278d19a3cfb9418b09ea1a4ab927","modified":1446889189111},{"_id":"source/categories/index.md","shasum":"ba3a1a01177f3302e0ee582f12ae632b7ea7863b","modified":1446889001842},{"_id":"source/tags/index.md","shasum":"4445c40ee0b358068f699f63a6af8910313eec13","modified":1446888951367},{"_id":"themes/ounn/LICENSE","shasum":"7a6afbc5f1893c6a65aaf280bc7a23af3e3cb8bf","modified":1450254580551},{"_id":"themes/ounn/README.md","shasum":"992a20e5a536a8e90c61ff6c6fee19aef7a074e2","modified":1450254580554},{"_id":"themes/ounn/_config.yml","shasum":"9146c3339e24463f409b57eb58855917ae808633","modified":1451802502008},{"_id":"themes/ounn/languages/en.yml","shasum":"982bfffdb6ab495867255e79d852a9adb68bd10c","modified":1446907653628},{"_id":"themes/ounn/languages/zh-hk.yml","shasum":"f80a494ecf23166152011cb5f4e9174fefa9197c","modified":1446907653644},{"_id":"themes/ounn/languages/zh-Hans.yml","shasum":"ba22a703638a23fce2cc51fcdfb1ba4dd7bcd114","modified":1446907653641},{"_id":"themes/ounn/languages/zh-tw.yml","shasum":"f60af901f90fab657a1d27f981ad3381069842d0","modified":1446907653647},{"_id":"themes/ounn/layout/_layout.swig","shasum":"f258715bde4e216db935acf2d2c76a78b3c37fe0","modified":1451802640439},{"_id":"themes/ounn/layout/archive.swig","shasum":"ebfb55f4432b592119a10592e4f26272cc72359e","modified":1451751181435},{"_id":"themes/ounn/layout/category.swig","shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f","modified":1450273825469},{"_id":"themes/ounn/layout/index.swig","shasum":"a5359f622ca4c517455cc69e290bc814fb633574","modified":1451795852153},{"_id":"themes/ounn/layout/page.swig","shasum":"7bf5ca226e59ecd3ba02e82aa3652b9af19c0765","modified":1450256629474},{"_id":"themes/ounn/layout/post.swig","shasum":"6021d42540fbcea707ac21bcb542608920e9ec50","modified":1450256634699},{"_id":"themes/ounn/layout/tag.swig","shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad","modified":1450256641983},{"_id":"themes/ounn/source/green/index.html","shasum":"48b87a552dffee1ddc27145f268234e619788b07","modified":1451803408412},{"_id":"public/img/favicon.ico","modified":1451802425264,"shasum":"c0159d635085448ccc0aa746d03b48469bffb12c"},{"_id":"public/green/index.html","modified":1451802425277,"shasum":"20e9061cd7b850ff6ab8927ee14d78e21ef6406e"},{"_id":"public/404.html","modified":1451802425292,"shasum":"7bf5ca226e59ecd3ba02e82aa3652b9af19c0765"},{"_id":"public/tags/index.html","modified":1451802425296,"shasum":"7bf5ca226e59ecd3ba02e82aa3652b9af19c0765"},{"_id":"public/categories/index.html","modified":1451802425301,"shasum":"7bf5ca226e59ecd3ba02e82aa3652b9af19c0765"},{"_id":"public/about/index.html","modified":1451802425304,"shasum":"7bf5ca226e59ecd3ba02e82aa3652b9af19c0765"},{"_id":"public/backbone-router-and-view/index.html","modified":1451802425308,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/use-js-to-convert-ts-to-data/index.html","modified":1451802425315,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/write-a-compatible-js-module/index.html","modified":1451802425321,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/show-a-default-image-when-the-image-is-broken/index.html","modified":1451802425324,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/git-remember-password-in-window-and-linux/index.html","modified":1451802425330,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/use-correct-way-to-change-view/index.html","modified":1451802425335,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/baseview-in-backbone/index.html","modified":1451802425340,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/wrong-clearfix-make-me-crazy/index.html","modified":1451802425347,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/wamp-mysql-chinese-question-mark/index.html","modified":1451802425351,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/modify-wamp-mysql-password/index.html","modified":1451802425354,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/protect-yourself-in-network/index.html","modified":1451802425359,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/navicat-10-1-7-key/index.html","modified":1451802425362,"shasum":"6021d42540fbcea707ac21bcb542608920e9ec50"},{"_id":"public/archives/index.html","modified":1451802425366,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/page/2/index.html","modified":1451802425377,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2014/index.html","modified":1451802425382,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2014/12/index.html","modified":1451802425385,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/index.html","modified":1451802425388,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/page/2/index.html","modified":1451802425391,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/07/index.html","modified":1451802425396,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/08/index.html","modified":1451802425399,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/11/index.html","modified":1451802425404,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/archives/2015/12/index.html","modified":1451802425409,"shasum":"ebfb55f4432b592119a10592e4f26272cc72359e"},{"_id":"public/categories/css/index.html","modified":1451802425414,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/categories/javascript/index.html","modified":1451802425419,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/categories/mysql/index.html","modified":1451802425424,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/categories/backbone/index.html","modified":1451802425427,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/categories/生活杂记/index.html","modified":1451802425438,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/categories/git/index.html","modified":1451802425442,"shasum":"b3912fa1e758837a0e17732ef8a63bac99374d5f"},{"_id":"public/atom.xml","modified":1451802425446,"shasum":"d5d9b17668d5a0c729ed4efe4b240064c9a1afbe"},{"_id":"public/sitemap.xml","modified":1451802425449,"shasum":"575ba1ef2b13a0cec22ab9b91104dc467ac17c76"},{"_id":"public/index.html","modified":1451802425542,"shasum":"47d59a7f6c582ad485d59a5748831245c76e7e37"},{"_id":"public/page/2/index.html","modified":1451802425569,"shasum":"5eb6af2c74d06af9aa83232b83ebf5f96aa55111"},{"_id":"public/tags/html/index.html","modified":1451802425573,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/css/index.html","modified":1451802425578,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/compatible-module/index.html","modified":1451802425582,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/amd/index.html","modified":1451802425585,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/cmd/index.html","modified":1451802425589,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/mysql/index.html","modified":1451802425593,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/中文乱码/index.html","modified":1451802425597,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/ts/index.html","modified":1451802425602,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/date/index.html","modified":1451802425606,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/format/index.html","modified":1451802425613,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/js/index.html","modified":1451802425619,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/backbone/index.html","modified":1451802425622,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/imgage-error/index.html","modified":1451802425625,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/tedx/index.html","modified":1451802425629,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/在网络暴力中捍卫自己/index.html","modified":1451802425633,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/演讲稿/index.html","modified":1451802425635,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/袁姗姗/index.html","modified":1451802425638,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/navicat/index.html","modified":1451802425641,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/paswword/index.html","modified":1451802425645,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/git/index.html","modified":1451802425648,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/记住密码/index.html","modified":1451802425651,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/base/index.html","modified":1451802425654,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/view/index.html","modified":1451802425660,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"public/tags/router/index.html","modified":1451802425663,"shasum":"287d81aefc1fbd6bb5a6794ab5e6a1267a8394ad"},{"_id":"source/favicon.ico","shasum":"c0159d635085448ccc0aa746d03b48469bffb12c","modified":1451800059799},{"_id":"themes/ounn/source/impress/README.md","shasum":"b8e469e2e88b63de141a0e1092ac73adb2aa5930","modified":1451318744150},{"_id":"themes/ounn/source/impress/apple-touch-icon.png","shasum":"a4305a29b99e4fda4c2ae03fdd5745a7c8d4ecff","modified":1451318744151},{"_id":"themes/ounn/source/impress/bower.json","shasum":"55b83c0846bfc7d996d12a014c814e012a8254fd","modified":1451318744153},{"_id":"themes/ounn/source/impress/css/impress-demo.css","shasum":"f8d9ab8b2f9e9619028e3bddd3451d0053e5dec9","modified":1451318744162},{"_id":"themes/ounn/source/impress/favicon.png","shasum":"84bf722b820ba415290268d5aa3aa379205e4aa1","modified":1451318744162},{"_id":"themes/ounn/source/impress/index.html","shasum":"a7ecbbdd6227e7c57930624b1cf48204cf265f06","modified":1451318744181},{"_id":"themes/ounn/source/impress/js/impress.js","shasum":"279e377d5765558de057b11d02c9e6c6fa13b426","modified":1451401332569},{"_id":"themes/ounn/source/impress/oli.html","shasum":"c898df1e9beb8ff2ec95e07d21eaba47559905d4","modified":1451405984592},{"_id":"themes/strict/LICENSE","shasum":"a8dbe5ba31ca0e72adcb65520674dc97c25bd970","modified":1452522632548},{"_id":"themes/strict/README.md","shasum":"1fdf5571c052e9e353ca88d9e6c9b2f15167a3c5","modified":1452522632551},{"_id":"themes/strict/_config.yml","shasum":"8763c25cd12b55be86f7e506853ccf02b48c5b36","modified":1452523242143},{"_id":"themes/strict/layout/_views/foot.jade","shasum":"9f2c2161e09f24de20f260c5b940a046d9913d48","modified":1452522632558},{"_id":"themes/strict/layout/_views/head.jade","shasum":"0a02079fb326b582b431d920d64fe20ab6245713","modified":1452522632564},{"_id":"themes/strict/layout/_views/main.jade","shasum":"43ed3908192bdfabde71fd5e42ff850af47d6608","modified":1452522632567},{"_id":"themes/strict/layout/_views/menu.jade","shasum":"01f665bd67c4855f0b2d7a0bf1a9eac84479f59f","modified":1452522632570},{"_id":"themes/strict/layout/_views/post.jade","shasum":"b10478325b90f8271e61f3dd925174569507e92a","modified":1452522632577},{"_id":"themes/strict/layout/_views/nav.jade","shasum":"f346ed3af6efab1cb744121bcdc44a4ac10f42c5","modified":1452522632574},{"_id":"themes/strict/layout/index.jade","shasum":"f28a0ed439ffdddc1a880b24474d69ac4da9b875","modified":1452522632586},{"_id":"themes/strict/layout/category.jade","shasum":"d163be3a4ebba67ccd9887005738d5dcc55d3d18","modified":1452522632583},{"_id":"themes/strict/layout/archive.jade","shasum":"6668090697e73141970acc86c14a911e100fc854","modified":1452522632580},{"_id":"themes/strict/layout/post.jade","shasum":"fe435df14f9a2c5c6555833c0fae9bfcf0daab95","modified":1452522632591},{"_id":"themes/strict/layout/page.jade","shasum":"7d665308c2c7bcdd59b2b5315973f12cc2b47158","modified":1452522632588},{"_id":"themes/strict/layout/tag.jade","shasum":"0b690b69b0ac77e7e48460a965af9717c6129482","modified":1452522632594},{"_id":"themes/strict/source/css/_main-r.styl","shasum":"bed460e88c22a451fa27e33b96099a36529d551d","modified":1452522632601},{"_id":"themes/strict/package.json","shasum":"db3b781b849b1bed5d31eee27ec5a7673775d62c","modified":1452522632598},{"_id":"themes/strict/source/css/base/_base.styl","shasum":"9c1bebe9f5b9d1831d3f81e4d440bb75406d0466","modified":1452522632607},{"_id":"themes/strict/source/css/base/_font.styl","shasum":"30c0e781cb9b1a925e84e3c95878c59b018aec67","modified":1452522632610},{"_id":"themes/strict/source/css/_var.styl","shasum":"ab6ca93444cbb366040447ce53d4178ba4521c3b","modified":1452522632604},{"_id":"themes/strict/source/css/base/_reset.styl","shasum":"93fac4ddab0cc39ddabe97d5fddd081da1b12e4f","modified":1452522632615},{"_id":"themes/strict/source/css/base/_mixin.styl","shasum":"2ae14baf0a54d454d1d36e2a67478903fe4f4f44","modified":1452522632612},{"_id":"themes/strict/source/css/base/_util.styl","shasum":"5cd96ac8735361f6d2d9898ba86b1106064d44da","modified":1452522632617},{"_id":"themes/strict/source/css/partial/_main.styl","shasum":"af5f1a4c6280f51173ebfa5c5a39329d74727468","modified":1452522632623},{"_id":"themes/strict/source/css/main.styl","shasum":"17a1955c6eed870b7c87997024a60786eae07130","modified":1452522632621},{"_id":"themes/strict/source/css/partial/_post.styl","shasum":"8e7a6cd30a3772575828fdd30c79b0638c2b3076","modified":1452522632627},{"_id":"themes/strict/source/css/vendor/_echo.styl","shasum":"b123fb3f61996bd19959c3195e9d17d6af199835","modified":1452522632630},{"_id":"themes/strict/source/css/vendor/_highlight.styl","shasum":"b8845cd4b713a96c6f6ce464bd3ca5aa895d2fb8","modified":1452522632633},{"_id":"themes/strict/source/css/vendor/_normalize.styl","shasum":"725436016e8b12bb6a292d881e396681abe7f5a6","modified":1452522632636},{"_id":"themes/strict/source/fonts/icon.eot","shasum":"9097fa8611053f4c2e5f35cd2a64efc40bd8b685","modified":1452522632639},{"_id":"themes/strict/source/fonts/icon.svg","shasum":"b6c00a2ddf10a52706ddbe8814ec71ce51043053","modified":1452522632642},{"_id":"themes/strict/source/fonts/icon.woff","shasum":"7d15057502dd0086931b763ebc62458c8669b4ed","modified":1452522632648},{"_id":"themes/strict/source/fonts/icon.ttf","shasum":"9a18ee1b1f245f6cc2c61fd1ebe58266b6c451ba","modified":1452522632645}],"Category":[{"name":"css","_id":"ciiy5ofzk0005egu37csr0bu7"},{"name":"JavaScript","_id":"ciiy5ofzv000cegu39wlh07k4"},{"name":"MySQL","_id":"ciiy5og05000legu3t9u3xkrq"},{"name":"Backbone","_id":"ciiy5og0m0012egu3m47lvjzc"},{"name":"生活杂记","_id":"ciiy5og13001begu3s4639xcg"},{"name":"GIT","_id":"ciiy5og1n001wegu37og6vwkl"},{"name":"Underscore","_id":"ciiy5og20002gegu3yastjamx"},{"name":"Hexo","_id":"ciiy5og28002negu3p2f3khd5"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"your site url \" homePageName=\"回到我的主页\"></script>\n\n</body>\n</html>","date":"2016-01-03T06:03:03.043Z","updated":"2015-11-07T09:40:47.180Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ciiy5ofyx0000egu3toxn1j14"},{"title":"Tagcloud","date":"2015-11-07T09:35:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"title: Tagcloud\ndate: 2015-11-07 17:35:00\ntype: \"tags\"\n---","updated":"2015-11-07T09:35:51.367Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciiy5ofz40001egu3ll01lcp5"},{"title":"分类","date":"2015-11-07T09:35:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2015-11-07 17:35:00\ntype: \"categories\"\n---","updated":"2015-11-07T09:36:41.842Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ciiy5ofz70002egu3746yagjc"},{"title":"about","date":"2015-11-07T09:39:49.000Z","_content":"","source":"about/index.md","raw":"title: about\ndate: 2015-11-07 17:39:49\n---\n","updated":"2015-11-07T09:39:49.111Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciiy5ofz80003egu39g2fz2fi"}],"Post":[{"title":"Wrong clearfix Make me crazy!","date":"2015-11-11T09:45:59.000Z","_content":"\nClearfix 就是这么简单！\n```css\n.clearfix:after,\n.clearfix:before {\n    display: table;\n    content: \" \"\n}\n\n.clearfix:after {\n    clear: both\n}\n```\n","source":"_posts/wrong-clearfix-make-me-crazy.md","raw":"title: 'Wrong clearfix Make me crazy!'\ndate: 2015-11-11 17:45:59\ntags:\n  - html\n  - css\ncategories:\n  - css\n---\n\nClearfix 就是这么简单！\n```css\n.clearfix:after,\n.clearfix:before {\n    display: table;\n    content: \" \"\n}\n\n.clearfix:after {\n    clear: both\n}\n```\n","slug":"wrong-clearfix-make-me-crazy","published":1,"updated":"2015-11-27T02:59:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5ofzd0004egu3xb5jqzz3"},{"title":"编写一个可以兼容 AMD 和 CMD 的 js 模块","date":"2015-11-29T12:11:07.000Z","_content":"\n没什么好解释的，直接看代码吧。\n\n```js\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        //define(['jquery', 'underscore'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify/Seajs\n        module.exports = factory(require('jquery'), require('underscore'));\n    } else {\n        // Browser globals\n        factory(jQuery, _);\n        //factory();\n    }\n}(function ($, _) {\n    //doSomething...\n}));\n```\n\n还有一种写法\n```js\n// from: http://segmentfault.com/a/1190000003732752\n;(function(){\n    function MyModule() {\n        // ...\n    }\n    \n    var moduleName = MyModule;\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        module.exports = moduleName;\n    } else if (typeof define === 'function' && (define.amd || define.cmd)) {\n        define(function() { return moduleName; });\n    } else {\n        this.moduleName = moduleName;\n    }\n}).call(function() {\n    return this || (typeof window !== 'undefined' ? window : global);\n});\n```","source":"_posts/write-a-compatible-js-module.md","raw":"title: 编写一个可以兼容 AMD 和 CMD 的 js 模块\ntags:\n  - compatible module\n  - AMD\n  - CMD\ncategories:\n  - JavaScript\ndate: 2015-11-29 20:11:07\n---\n\n没什么好解释的，直接看代码吧。\n\n```js\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        //define(['jquery', 'underscore'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify/Seajs\n        module.exports = factory(require('jquery'), require('underscore'));\n    } else {\n        // Browser globals\n        factory(jQuery, _);\n        //factory();\n    }\n}(function ($, _) {\n    //doSomething...\n}));\n```\n\n还有一种写法\n```js\n// from: http://segmentfault.com/a/1190000003732752\n;(function(){\n    function MyModule() {\n        // ...\n    }\n    \n    var moduleName = MyModule;\n    if (typeof module !== 'undefined' && typeof exports === 'object') {\n        module.exports = moduleName;\n    } else if (typeof define === 'function' && (define.amd || define.cmd)) {\n        define(function() { return moduleName; });\n    } else {\n        this.moduleName = moduleName;\n    }\n}).call(function() {\n    return this || (typeof window !== 'undefined' ? window : global);\n});\n```","slug":"write-a-compatible-js-module","published":1,"updated":"2015-12-16T08:03:28.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5ofzt000begu3np8tf0f1"},{"title":"wamp mysql 中文显示为？","id":"235","date":"2015-08-09T05:25:28.000Z","_content":"\n发现中文显示为“？”，然后我看了一下 mysql.ini，添加了两行\n\n```\n[mysqld]\nport=3306\n#下面的两行是添加的\ncharacter_set_client=utf8\ncharacter_set_server=utf8\n```\n\n后来再看 mysql 中的信息发现这样了，不过中文问题已经解决了。\n```sql\nmysql> show variables like 'character%';\n+--------------------------+----------------------------------------------------\n+\n| Variable_name            | Value\n|\n+--------------------------+----------------------------------------------------\n+\n| character_set_client     | gbk\n|\n| character_set_connection | gbk\n|\n| character_set_database   | utf8\n|\n| character_set_filesystem | binary\n|\n| character_set_results    | gbk\n|\n| character_set_server     | utf8\n|\n| character_set_system     | utf8\n|\n| character_sets_dir       | E:\\Soft\\wamp\\bin\\mysql\\mysql5.6.12\\share\\charsets\\\n|\n+--------------------------+----------------------------------------------------\n```","source":"_posts/wamp-mysql-chinese-question-mark.md","raw":"title: wamp mysql 中文显示为？\ntags:\n  - mysql\n  - 中文乱码\nid: 235\ncategories:\n  - MySQL\ndate: 2015-08-09 13:25:28\n---\n\n发现中文显示为“？”，然后我看了一下 mysql.ini，添加了两行\n\n```\n[mysqld]\nport=3306\n#下面的两行是添加的\ncharacter_set_client=utf8\ncharacter_set_server=utf8\n```\n\n后来再看 mysql 中的信息发现这样了，不过中文问题已经解决了。\n```sql\nmysql> show variables like 'character%';\n+--------------------------+----------------------------------------------------\n+\n| Variable_name            | Value\n|\n+--------------------------+----------------------------------------------------\n+\n| character_set_client     | gbk\n|\n| character_set_connection | gbk\n|\n| character_set_database   | utf8\n|\n| character_set_filesystem | binary\n|\n| character_set_results    | gbk\n|\n| character_set_server     | utf8\n|\n| character_set_system     | utf8\n|\n| character_sets_dir       | E:\\Soft\\wamp\\bin\\mysql\\mysql5.6.12\\share\\charsets\\\n|\n+--------------------------+----------------------------------------------------\n```","slug":"wamp-mysql-chinese-question-mark","published":1,"updated":"2015-11-23T03:00:31.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og04000kegu3rish0da2"},{"title":"JavaScript 中 Timestamp 与 Date 的转化","date":"2015-12-02T03:10:44.000Z","_content":"## 问题产生\n今天在处理一个接口时，发现返回的格式是这样的：\n```json\n{\n    'meta': {\n        'has_next_msg': false\n    }\n    'objects': [\n        {\n            'text': '111', \n            'from_user_type': 'PAT', \n            'pic': '', \n            'ts': 1419939065\n        }\n    ]\n}\n```\n\n`ts` 那个属性我不太熟悉，不过我觉得应该是 timestamp 的意思吧。后来才知道，`ts` 就是该条消息的发送时间戳（timestamp），显示这条信息的时候应该显示为日期。\n\n## 把 Date 转化为 Timestamp\n\n我们都知道，在 js 里面把 date 转化为 timestamp 的方法比较简单，而且方法也有好多种，比如：\n\n```js\n// get the timestamp in seconds\nMath.floor(Date.now() / 1000);\n\n// or with a slightly way\nDate.now() / 1000 | 0\n\n// Year 2038 problem? lol...\nnew Date('Jan 1, 2039') / 1000 | 0 // -2117514496 \n\n/*----------*/\nMath.round(new Date().getTime()/1000);\n\n+new Date / 1000 | 0\n\n~~(Date.now() / 1000)\n\nnew Date / 1e3 | 0\n```\n\n## 把 Timestamp 转化为 Date\n\n还有一种需求，比如我要把 timestamp 转化为 `1991-10-03 06:01:54` ，那么就需要先把这个 timestamp 转化为日期， 然后再进行format吧，正好我找到一个比较方便的办法：\n```js\nDate.prototype.format = function(format) {\n    var o = {\n        'M+': this.getMonth() + 1,          // month\n        'd+': this.getDate(),                 // day\n        'h+': this.getHours(),                  // hour\n        'm+': this.getMinutes(),                  // minute\n        's+': this.getSeconds(),                    // second     \n        'q+': Math.floor((this.getMonth() + 3) / 3),  // quarter\n        'S' : this.getMilliseconds()                 // millisecond\n    };\n    \n    // year\n    if (/(y+)/.test(format) || /(Y+)/.test(format)) {\n        format = format.replace(RegExp.$1, (this.getFullYear() + '')\n                       .substr(4 - RegExp.$1.length));\n    }\n    \n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(format)) {\n            var first = RegExp.$1;\n            var str = first.length === 1 \n                    ? o[k] \n                    : ('00' + o[k]).substr(('' + o[k]).length); // nb\n            format = format.replace(first, str);\n        }\n    }\n    \n    return format;\n};\n\nfunction tsToDate(timestamp) {\n    return (new Date(timestamp * 1000)).format('yyyy-MM-dd hh:mm:ss');\n} \n\n\n// test it\n> tsToDate(1448967948)\n< \"2015-12-01 19:05:48\"\n```","source":"_posts/use-js-to-convert-ts-to-data.md","raw":"title: JavaScript 中 Timestamp 与 Date 的转化\ntags:\n  - ts\n  - date\n  - format\n  - js\ncategories:\n  - JavaScript\ndate: 2015-12-02 11:10:44\n---\n## 问题产生\n今天在处理一个接口时，发现返回的格式是这样的：\n```json\n{\n    'meta': {\n        'has_next_msg': false\n    }\n    'objects': [\n        {\n            'text': '111', \n            'from_user_type': 'PAT', \n            'pic': '', \n            'ts': 1419939065\n        }\n    ]\n}\n```\n\n`ts` 那个属性我不太熟悉，不过我觉得应该是 timestamp 的意思吧。后来才知道，`ts` 就是该条消息的发送时间戳（timestamp），显示这条信息的时候应该显示为日期。\n\n## 把 Date 转化为 Timestamp\n\n我们都知道，在 js 里面把 date 转化为 timestamp 的方法比较简单，而且方法也有好多种，比如：\n\n```js\n// get the timestamp in seconds\nMath.floor(Date.now() / 1000);\n\n// or with a slightly way\nDate.now() / 1000 | 0\n\n// Year 2038 problem? lol...\nnew Date('Jan 1, 2039') / 1000 | 0 // -2117514496 \n\n/*----------*/\nMath.round(new Date().getTime()/1000);\n\n+new Date / 1000 | 0\n\n~~(Date.now() / 1000)\n\nnew Date / 1e3 | 0\n```\n\n## 把 Timestamp 转化为 Date\n\n还有一种需求，比如我要把 timestamp 转化为 `1991-10-03 06:01:54` ，那么就需要先把这个 timestamp 转化为日期， 然后再进行format吧，正好我找到一个比较方便的办法：\n```js\nDate.prototype.format = function(format) {\n    var o = {\n        'M+': this.getMonth() + 1,          // month\n        'd+': this.getDate(),                 // day\n        'h+': this.getHours(),                  // hour\n        'm+': this.getMinutes(),                  // minute\n        's+': this.getSeconds(),                    // second     \n        'q+': Math.floor((this.getMonth() + 3) / 3),  // quarter\n        'S' : this.getMilliseconds()                 // millisecond\n    };\n    \n    // year\n    if (/(y+)/.test(format) || /(Y+)/.test(format)) {\n        format = format.replace(RegExp.$1, (this.getFullYear() + '')\n                       .substr(4 - RegExp.$1.length));\n    }\n    \n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(format)) {\n            var first = RegExp.$1;\n            var str = first.length === 1 \n                    ? o[k] \n                    : ('00' + o[k]).substr(('' + o[k]).length); // nb\n            format = format.replace(first, str);\n        }\n    }\n    \n    return format;\n};\n\nfunction tsToDate(timestamp) {\n    return (new Date(timestamp * 1000)).format('yyyy-MM-dd hh:mm:ss');\n} \n\n\n// test it\n> tsToDate(1448967948)\n< \"2015-12-01 19:05:48\"\n```","slug":"use-js-to-convert-ts-to-data","published":1,"updated":"2015-12-02T03:49:22.093Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og0c000regu318wyseuy"},{"title":"use correct way to change view","date":"2015-11-17T15:42:24.000Z","_content":"","source":"_posts/use-correct-way-to-change-view.md","raw":"title: use correct way to change view\ntags:\n  - backbone\ncategories:\n  - Backbone\ndate: 2015-11-17 23:42:24\n---\n","slug":"use-correct-way-to-change-view","published":1,"updated":"2015-11-23T03:38:24.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og0l0011egu3oqs0kluh"},{"title":"图片加载错误时显示默认图片","date":"2015-11-27T10:24:36.000Z","_content":"\n## 直接写\n\n```js\nfunction imgError(image) {\n    image.onerror = null; // prevent event bubble\n    image.src = \"/images/noimage.gif\";\n    return true;\n}\n```\n```html\n<img src=\"image.png\" onerror=\"imgError(this);\"/>\n```\n\n## 使用 jQuery\n```js\n$(\"img\").error(function () {\n    $(this).unbind(\"error\").attr(\"src\", \"broken.gif\");\n});\n\n//If you use this technique you can use the \"one\" method to avoid needing to unbind the event: \n$('img').one('error', function() { \n  this.src = 'broken.gif'; \n}); \n```\n\n## 还有一种写法\n```js\n$(window).load(function() {\n  $('img').each(function() {\n    if (!this.complete \n        || typeof this.naturalWidth == \"undefined\" \n        || this.naturalWidth == 0) {\n      // image was broken, replace with your new image\n      this.src = 'broken.gif';\n    }\n  });\n});\n```","source":"_posts/show-a-default-image-when-the-image-is-broken.md","raw":"title: 图片加载错误时显示默认图片\ntags:\n  - imgage error\ncategories:\n  - JavaScript\ndate: 2015-11-27 18:24:36\n---\n\n## 直接写\n\n```js\nfunction imgError(image) {\n    image.onerror = null; // prevent event bubble\n    image.src = \"/images/noimage.gif\";\n    return true;\n}\n```\n```html\n<img src=\"image.png\" onerror=\"imgError(this);\"/>\n```\n\n## 使用 jQuery\n```js\n$(\"img\").error(function () {\n    $(this).unbind(\"error\").attr(\"src\", \"broken.gif\");\n});\n\n//If you use this technique you can use the \"one\" method to avoid needing to unbind the event: \n$('img').one('error', function() { \n  this.src = 'broken.gif'; \n}); \n```\n\n## 还有一种写法\n```js\n$(window).load(function() {\n  $('img').each(function() {\n    if (!this.complete \n        || typeof this.naturalWidth == \"undefined\" \n        || this.naturalWidth == 0) {\n      // image was broken, replace with your new image\n      this.src = 'broken.gif';\n    }\n  });\n});\n```","slug":"show-a-default-image-when-the-image-is-broken","published":1,"updated":"2015-11-29T12:18:07.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og0s0016egu31aakuswq"},{"title":"在网络暴力中捍卫自己","id":"224","date":"2015-07-10T13:52:53.000Z","_content":"\n我想先问大家一个问题，有谁一年365，天天被未曾谋面的陌生人骂?举手的这个人就站在你们面前。不过别担心，我今天不是来诉苦的，我是穿着马甲来跟大家分享如何被骂大的。\n\n网络对于我们来说再日常不过，但是当你身处网络世界的围攻中，就不再那么轻松。2013年的以前，我作梦也想不到自己会变成网络世界里的“黑姑娘”。因为参演了一部电视剧，演技没有达到观众的预期，故事的结局不尽人意，而被推到了风口浪尖，让我从一个还在摸爬滚打的小演员，一夜之间变成了被大家声讨的“热门人物”。\n\n震惊之余，让自己尽快从虚拟的世界中挣脱出来是我唯一的出路。我选择在网络声中被倒下，就在网络声中爬起来。有不少人认为，公众人物就应该具有强大的承受能力和耐力，打不还手，骂不还口。偶尔被坑蒙拐骗了，还要尽量先捂着不敢报警。\n\n当我被骂得小有名气的时候，我就暗自思量。反正也挨骂，不如用最积极的方式迎接骂声。2013年3月3日，我在微博上发出了一条名为“爱的骂骂”的微博，既然大家那么需要宣泄，点击鼠标可以不用负责，那我也动动手指头，干点什么吧！\n\n我在微博里面制定了骂的规则——骂，没问题，但请集中精力地骂。只要在我这条微博下面留言的，不管是鼓励我的、骂我的，还是随便说说的，我都认捐五毛。24个小时，有十万多条留言，捐款金额是50693.5元，作为北京一家残疾孤儿康复机构的手术费。\n\n在这里，我要对每一位留言的人表示感谢。因为我们一起在虚拟的世界中救助了4个在现实生活中顽强生活着的残疾孤儿。其中有一个孩子，在手术后的那一年，终于有机会可以站起来了。那时候她还不满三岁。当我看到她第一次站起来，我很感动，也很骄傲，这个“黑姑娘”干了一件痛快的事。\n\n是的，我说出了金额。我知道，一定会有人说“捐那么少，还好意思报数”。我相信现在大部分人都不愿意公布捐款金额，因为捐款已经不再是一件随心的行动，而是成为大家根据金额的多少来衡量爱心的大小。我相信在座的各位也一定有过朋友之间随份子该给多少才合适的烦恼。我之所以说出来，不仅仅是因为我不觉得随性的行为需要躲闪，更因为“爱的骂骂”是每一个留言人的镜子。当时骂过我的人，也许，在两年后的今天听到我说的这番话，会想起曾经不太善意的留言却给了这些孩子们机会获得新生。这同样值得高兴。\n\n其实我们每个人都有不同阶段的新生，不是吗?“爱的骂骂”发出的那一刻，我如重生般释然了。虽然，我不像很多演员那样，拥有令人赞叹的表演才华，自己也觉得不是天生吃这碗饭的，但是既然选择了演员这份职业，我相信只要通过自己的努力和善待他人，就可以让自己的家人和自己过上幸福美满的生活。\n\n然而这一切，在2013年的夏天被一句开创演艺界(网络)暴力先河的“滚出娱乐圈”所动摇。我是第一个(被)放在主语位置的人。袁姗姗这个名字好像从此就和“一无是处”划上了等号。那个时候，不管说什么、做什么、演什么都不对。更有媒体总结了“袁姗姗不被观众所喜欢的五大理由”，第一条理由是“没有理由”。这是得有多深厚的感情基础，才能达到的境界。\n\n2013年确实挺让人操心的，从春天到夏天都没有平静过。一开始，我也有些懊恼，不知道到底发生了什么。我既然没有不劳而获，也没有做过伤天害理的事。为什么让我“滚”?!没多久，我想明白了一个道理，谁都可以说我不好，但是自己必须接纳那个心安理得的自己。既然我的演艺生涯要倒数开始，那我之后的每一点进步都是充满喜悦的。从零分到六十分比从满分到六十分，哪个更让人开心呢?\n\n也是从那个时候，我重拾扔下了多年的小提琴，还有健身。运动让我心情愉悦。不工作的时候，练琴和健身会让我的每一天都过得很充实，根本没有过多的时间停留在网上，更顾不上网友的围观。我建议那些沉迷于网络的年轻人，每天可以挤出一点时间锻炼身体。当有朝一日被他人欺负的时候，至少可以像我一样，身轻如燕，自由翻滚。\n\n不尽人意的2013年确实过得有些艰辛，但是我也时刻提醒着自己，别忘了尽可能给予所能达到的人以温暖。这是对鼓励过你的人最好的感激方式。但同时，我们也不要忽略身边朋友向你发出的求助信号。也许你的关心会改变他的决定。\n\n我在来之前了解到几个数据。在美国，有40%的年轻人遭遇过网络欺凌侵害，甚至有些受害者因此而患上精神疾病，身心受损。联合国儿童基金会在2014年的9月发布了一则消息报道，在法国，6到18岁之间的青少年有12.5%的人都有过在网上被攻击的经历。在中国，因为网络暴力而结束生命的人，离我们的生活越来越近。\n\n前不久，在台湾，有一位艺人因为网络暴力而自杀。听到这个消息的时候，我非常惋惜。我不知道她内心到底挣扎了多久。但当我看到这则新闻的时候，我有过一念之间的不安。如果在这之前，我可以跟她说几句话，她是不是好过一些?\n\n互联网的时代，让人与人之间的沟通方式越来越便捷，沟通成本却越来越大。足不出户在网上匿名可以干很多事，每天都要面对接踵而来的海量信息，有谁还愿意费力去核实消息的真实性，也不会有太多人会为自己发出或转发的信息而深思熟虑。那还有多少人会为他人的生命叹息呢?\n\n语言不应该成为致命的利器。网络的诞生也不应该是为了制造困扰，而是为了让生活变得更加美好。作为过去也许将来还会遭遇网络暴力的过来人，我不希望再有人因为网络暴力而受到伤害。请善用语言，让人言可敬。\n\n特别感谢在那段特殊时间陪伴我的家人和朋友，感谢他们承受住了一个当时还没有来得及减肥、各方面份量都很重的我。经历了这些，并不是想说明自己有多强大，但确实因为这些切身经历让我有了足够的时间去思考。我曾经问过自己一个问题——如果我当时真的不堪重负放弃了演员这个职业，是否网络暴力就会消失？答案当然不会。既然还是要面对，就应该积极面对。\n\n前不久，我参与了一部公益电影的拍摄。电影传递了一个非常积极的理念：每个人都有自由选择的机会和权利，无论你生下来是幸运的还是不幸的。我非常赞同，所以我选择做一个积极快乐的自己，不再受控于网络暴力中，不再只能看到消极的一面。\n\n都说做公益是在帮助他人，在我身上，成全了一个更加快乐的自己。不知道大家有没有看过这部电影。电影的名字叫《有一天》。我想在这里特别推荐一下。虽然我只参演了电影的一部分，但也给我带来了很多启发和感动。这部电影关注了九类特殊儿童群体。我参与拍摄的故事和聋哑儿童有关。跟我一起搭档演出的也是一名聋哑儿童。拍摄之前，我还有些顾虑，我不知道该怎么去跟他交流，我担心会因为自己不小心的举动伤害到他。但是见面之后，我才发现成年人的世界真的是因为想太多了变得复杂。只要我们保持一颗平常的心，用平等的方式去交流，就不会存在特别的障碍。重要的是你怎么看，而不是他怎么想。\n\n拍摄的那几天，我平静而快乐。每当完成一个镜头，这个小少年都会跟我竖起大拇指示意。他这个小小的举动也提醒了我和我们，有人选择赞美有人则不。\n\n感谢“爱的骂骂”，感谢《有一天》，感谢喝倒彩时刻提醒我的人，感谢一直鼓励我的家人和朋友，感谢倔强中的那个自己。我希望能有更多的人可以像我一样，主动地从逆境中走出来。这个世界还有很多需要我们关心的事去做，需要我们关心的人去爱。保持自己的真实，倔强地活下去。\n\n感谢大家的聆听，感谢网络世界将我带到你们面前。\n\n&nbsp;","source":"_posts/protect-yourself-in-network.md","raw":"title: 在网络暴力中捍卫自己\ntags:\n  - tedx\n  - 在网络暴力中捍卫自己\n  - 演讲稿\n  - 袁姗姗\nid: 224\ncategories:\n  - 生活杂记\ndate: 2015-07-10 21:52:53\n---\n\n我想先问大家一个问题，有谁一年365，天天被未曾谋面的陌生人骂?举手的这个人就站在你们面前。不过别担心，我今天不是来诉苦的，我是穿着马甲来跟大家分享如何被骂大的。\n\n网络对于我们来说再日常不过，但是当你身处网络世界的围攻中，就不再那么轻松。2013年的以前，我作梦也想不到自己会变成网络世界里的“黑姑娘”。因为参演了一部电视剧，演技没有达到观众的预期，故事的结局不尽人意，而被推到了风口浪尖，让我从一个还在摸爬滚打的小演员，一夜之间变成了被大家声讨的“热门人物”。\n\n震惊之余，让自己尽快从虚拟的世界中挣脱出来是我唯一的出路。我选择在网络声中被倒下，就在网络声中爬起来。有不少人认为，公众人物就应该具有强大的承受能力和耐力，打不还手，骂不还口。偶尔被坑蒙拐骗了，还要尽量先捂着不敢报警。\n\n当我被骂得小有名气的时候，我就暗自思量。反正也挨骂，不如用最积极的方式迎接骂声。2013年3月3日，我在微博上发出了一条名为“爱的骂骂”的微博，既然大家那么需要宣泄，点击鼠标可以不用负责，那我也动动手指头，干点什么吧！\n\n我在微博里面制定了骂的规则——骂，没问题，但请集中精力地骂。只要在我这条微博下面留言的，不管是鼓励我的、骂我的，还是随便说说的，我都认捐五毛。24个小时，有十万多条留言，捐款金额是50693.5元，作为北京一家残疾孤儿康复机构的手术费。\n\n在这里，我要对每一位留言的人表示感谢。因为我们一起在虚拟的世界中救助了4个在现实生活中顽强生活着的残疾孤儿。其中有一个孩子，在手术后的那一年，终于有机会可以站起来了。那时候她还不满三岁。当我看到她第一次站起来，我很感动，也很骄傲，这个“黑姑娘”干了一件痛快的事。\n\n是的，我说出了金额。我知道，一定会有人说“捐那么少，还好意思报数”。我相信现在大部分人都不愿意公布捐款金额，因为捐款已经不再是一件随心的行动，而是成为大家根据金额的多少来衡量爱心的大小。我相信在座的各位也一定有过朋友之间随份子该给多少才合适的烦恼。我之所以说出来，不仅仅是因为我不觉得随性的行为需要躲闪，更因为“爱的骂骂”是每一个留言人的镜子。当时骂过我的人，也许，在两年后的今天听到我说的这番话，会想起曾经不太善意的留言却给了这些孩子们机会获得新生。这同样值得高兴。\n\n其实我们每个人都有不同阶段的新生，不是吗?“爱的骂骂”发出的那一刻，我如重生般释然了。虽然，我不像很多演员那样，拥有令人赞叹的表演才华，自己也觉得不是天生吃这碗饭的，但是既然选择了演员这份职业，我相信只要通过自己的努力和善待他人，就可以让自己的家人和自己过上幸福美满的生活。\n\n然而这一切，在2013年的夏天被一句开创演艺界(网络)暴力先河的“滚出娱乐圈”所动摇。我是第一个(被)放在主语位置的人。袁姗姗这个名字好像从此就和“一无是处”划上了等号。那个时候，不管说什么、做什么、演什么都不对。更有媒体总结了“袁姗姗不被观众所喜欢的五大理由”，第一条理由是“没有理由”。这是得有多深厚的感情基础，才能达到的境界。\n\n2013年确实挺让人操心的，从春天到夏天都没有平静过。一开始，我也有些懊恼，不知道到底发生了什么。我既然没有不劳而获，也没有做过伤天害理的事。为什么让我“滚”?!没多久，我想明白了一个道理，谁都可以说我不好，但是自己必须接纳那个心安理得的自己。既然我的演艺生涯要倒数开始，那我之后的每一点进步都是充满喜悦的。从零分到六十分比从满分到六十分，哪个更让人开心呢?\n\n也是从那个时候，我重拾扔下了多年的小提琴，还有健身。运动让我心情愉悦。不工作的时候，练琴和健身会让我的每一天都过得很充实，根本没有过多的时间停留在网上，更顾不上网友的围观。我建议那些沉迷于网络的年轻人，每天可以挤出一点时间锻炼身体。当有朝一日被他人欺负的时候，至少可以像我一样，身轻如燕，自由翻滚。\n\n不尽人意的2013年确实过得有些艰辛，但是我也时刻提醒着自己，别忘了尽可能给予所能达到的人以温暖。这是对鼓励过你的人最好的感激方式。但同时，我们也不要忽略身边朋友向你发出的求助信号。也许你的关心会改变他的决定。\n\n我在来之前了解到几个数据。在美国，有40%的年轻人遭遇过网络欺凌侵害，甚至有些受害者因此而患上精神疾病，身心受损。联合国儿童基金会在2014年的9月发布了一则消息报道，在法国，6到18岁之间的青少年有12.5%的人都有过在网上被攻击的经历。在中国，因为网络暴力而结束生命的人，离我们的生活越来越近。\n\n前不久，在台湾，有一位艺人因为网络暴力而自杀。听到这个消息的时候，我非常惋惜。我不知道她内心到底挣扎了多久。但当我看到这则新闻的时候，我有过一念之间的不安。如果在这之前，我可以跟她说几句话，她是不是好过一些?\n\n互联网的时代，让人与人之间的沟通方式越来越便捷，沟通成本却越来越大。足不出户在网上匿名可以干很多事，每天都要面对接踵而来的海量信息，有谁还愿意费力去核实消息的真实性，也不会有太多人会为自己发出或转发的信息而深思熟虑。那还有多少人会为他人的生命叹息呢?\n\n语言不应该成为致命的利器。网络的诞生也不应该是为了制造困扰，而是为了让生活变得更加美好。作为过去也许将来还会遭遇网络暴力的过来人，我不希望再有人因为网络暴力而受到伤害。请善用语言，让人言可敬。\n\n特别感谢在那段特殊时间陪伴我的家人和朋友，感谢他们承受住了一个当时还没有来得及减肥、各方面份量都很重的我。经历了这些，并不是想说明自己有多强大，但确实因为这些切身经历让我有了足够的时间去思考。我曾经问过自己一个问题——如果我当时真的不堪重负放弃了演员这个职业，是否网络暴力就会消失？答案当然不会。既然还是要面对，就应该积极面对。\n\n前不久，我参与了一部公益电影的拍摄。电影传递了一个非常积极的理念：每个人都有自由选择的机会和权利，无论你生下来是幸运的还是不幸的。我非常赞同，所以我选择做一个积极快乐的自己，不再受控于网络暴力中，不再只能看到消极的一面。\n\n都说做公益是在帮助他人，在我身上，成全了一个更加快乐的自己。不知道大家有没有看过这部电影。电影的名字叫《有一天》。我想在这里特别推荐一下。虽然我只参演了电影的一部分，但也给我带来了很多启发和感动。这部电影关注了九类特殊儿童群体。我参与拍摄的故事和聋哑儿童有关。跟我一起搭档演出的也是一名聋哑儿童。拍摄之前，我还有些顾虑，我不知道该怎么去跟他交流，我担心会因为自己不小心的举动伤害到他。但是见面之后，我才发现成年人的世界真的是因为想太多了变得复杂。只要我们保持一颗平常的心，用平等的方式去交流，就不会存在特别的障碍。重要的是你怎么看，而不是他怎么想。\n\n拍摄的那几天，我平静而快乐。每当完成一个镜头，这个小少年都会跟我竖起大拇指示意。他这个小小的举动也提醒了我和我们，有人选择赞美有人则不。\n\n感谢“爱的骂骂”，感谢《有一天》，感谢喝倒彩时刻提醒我的人，感谢一直鼓励我的家人和朋友，感谢倔强中的那个自己。我希望能有更多的人可以像我一样，主动地从逆境中走出来。这个世界还有很多需要我们关心的事去做，需要我们关心的人去爱。保持自己的真实，倔强地活下去。\n\n感谢大家的聆听，感谢网络世界将我带到你们面前。\n\n&nbsp;","slug":"protect-yourself-in-network","published":1,"updated":"2015-11-23T03:09:10.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og11001aegu34oum1zna"},{"title":"Navicat 10.1.7 的注册码","id":"107","date":"2014-12-28T13:23:42.000Z","_content":"\n> NAVN-LNXG-XHHX-5NOO \n> 名和组织随便写。","source":"_posts/navicat-10-1-7-key.md","raw":"title: Navicat 10.1.7 的注册码\ntags:\n  - mysql\n  - navicat\nid: 107\ncategories:\n  - MySQL\ndate: 2014-12-28 21:23:42\n---\n\n> NAVN-LNXG-XHHX-5NOO \n> 名和组织随便写。","slug":"navicat-10-1-7-key","published":1,"updated":"2015-11-23T02:50:13.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1d001legu35pm5mxek"},{"title":"修改 wamp 中 mysql 默认空密码","id":"229","date":"2015-07-31T15:32:13.000Z","_content":"\n```sql\nuse mysql\n\nupdate user set password=PASSWORD('hooray') where user='root';\n\nflush privileges;\n```","source":"_posts/modify-wamp-mysql-password.md","raw":"title: 修改 wamp 中 mysql 默认空密码\ntags:\n  - mysql\n  - paswword\nid: 229\ncategories:\n  - MySQL\ndate: 2015-07-31 23:32:13\n---\n\n```sql\nuse mysql\n\nupdate user set password=PASSWORD('hooray') where user='root';\n\nflush privileges;\n```","slug":"modify-wamp-mysql-password","published":1,"updated":"2015-11-23T02:59:25.158Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1h001qegu3qbi5t8vf"},{"title":"GIT - remember password in window & linux.","date":"2015-11-23T02:46:44.000Z","_content":"\n# Window\n\n```sh\n# 因为 window 不允许之间新建 . 开头的文件，所以使用 mv 的方式\nmv git-credentials .git-credentials\n```\n\n然后编辑 **.git-credentials**\n```\n# github 是这样的格式\nhttps://{username}:{password}@github.com \n\n# git.oschina.net 是这样的\nhttps://{username}:{password}@git.oschina.net\n```\n\n最后一步是\n```sh\ngit config --global credential.helper store\n```\n\n# Linux\n\n> 在此之前或许要添加 ssh-key (https://help.github.com/articles/generating-ssh-keys/#platform-linux)\n\n```\n$ git config --global credential.helper cache\n# 默认缓存密码15分钟，可以改得更长, 比如1小时\n$ git config --global credential.helper 'cache --timeout=3600'\n```","source":"_posts/git-remember-password-in-window-and-linux.md","raw":"title: GIT - remember password in window & linux.\ntags:\n  - git\n  - 记住密码\ncategories:\n  - GIT\ndate: 2015-11-23 10:46:44\n---\n\n# Window\n\n```sh\n# 因为 window 不允许之间新建 . 开头的文件，所以使用 mv 的方式\nmv git-credentials .git-credentials\n```\n\n然后编辑 **.git-credentials**\n```\n# github 是这样的格式\nhttps://{username}:{password}@github.com \n\n# git.oschina.net 是这样的\nhttps://{username}:{password}@git.oschina.net\n```\n\n最后一步是\n```sh\ngit config --global credential.helper store\n```\n\n# Linux\n\n> 在此之前或许要添加 ssh-key (https://help.github.com/articles/generating-ssh-keys/#platform-linux)\n\n```\n$ git config --global credential.helper cache\n# 默认缓存密码15分钟，可以改得更长, 比如1小时\n$ git config --global credential.helper 'cache --timeout=3600'\n```","slug":"git-remember-password-in-window-and-linux","published":1,"updated":"2015-11-27T02:58:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1m001vegu3dp18591w"},{"title":"Baseview in Backbone","date":"2015-11-12T16:36:15.000Z","_content":"## 前言\n今天研究了好久的 Backbone，一直搞不明白，怎么通过 router 的改变来切换 view。\n\n## 过程跌宕起伏\n\n事情是这样的，都知道 backbone 有 model, collection, view, router 这些基本概念，今天我要写一个简单的网页，有两个 nav 项，因为用了 backbone，自然就想到了单页应用，就是单击其中某一个的时候，显示这一个 nav 项对应的内容。\n\n这就用到了 router 的事件，每当 router 改变时，重新 render 整个页面。（我是这么想的，也不是整个，router 变了有些内容必然会跟着变。）\n\n```js\nvar appView = this;\nBackbone.history.on('route', function (router, name) {\n    console.log('current route:', name);\n    appView.render();\n});\n```\n\n另外，在 router 里面我定义了一个变量，用来表明哪一个 nav 项被点击。\n```js\nBackbone.Router.extend({\n\n    // ... other methods\n\n    routes: {\n        '': 'chat', // default to #chat\n        'chat': 'chat',\n        'broadcast': 'broadcast',\n        '*nothingMatched': 'pageNotFoundRoute' // 404\n    },\n\n    chat: function () {\n        console.log(\"chat page loaded.\");\n        window.App.currentRouter = 'chat';\n    },\n\n    broadcast: function () {\n        console.log('broadcast page loaded.');\n        window.App.currentRouter = 'broadcast';\n    },\n\n    pageNotFoundRoute: function() {\n        console.log('pageNotFoundRoute');\n    }\n\n});\n```\n\n事实证明，我的想法是有一点点正确的，因为运行顺序是这样的：\n```bash\nin appView initialize.\ndoctor-router.js:11 Route initialize\ndoctor-router.js:22 chat page loaded.    # 首先，进入 router 的处理方法\napp.js:31 current route: chat            # 然后，响应 router 的 change 事件\napp.js:58 in appView render.             # 最后，appView 的 render 方法根据 route name\n                                         # render对应的 view\n```\n\nrender 的时候，首先要 **remove** 当前的view，然后 render 新的view。我是这么写的：\n```js\nif (this.siderView) {\n    // 删掉当前的\n    this.siderView.remove();\n}\n\nif (App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\n// render 新的 view\nthis.siderView.render();\n```\n\n运行之后我发现，这样点击下一个 nav 的时候， view 变成了空白的。后来审查元素，发现 el 那个节点整个被删掉了，因为他们两个共同放在同一个 el 下面。\n```js\n// view 1\nvar DoctorProfileView = Backbone.View.extend({\n    el: '.left_aside',\n    className:  'doctor_profile'\n    // ...\n});\n\n// view 2\nvar ChatSiderView = BaseView.extend({\n    el: '.left_aside',\n    // ...\n});\n```\n\n因为是新手，而且这是第一次用 backbone，所以还不知道 $el 就是 juqery 对象（其实问题不在这里），所以我就开始了漫无目的的搜索。\n\n其实办法肯定是有的，就是让他俩不共用同一个 el 节点，每次 render 完了之后，添加到要显示的地方，remove 的时候也只会删掉他自己，况且还可以用 hide。\n\n## 有了一线希望\n\n终于，我看到网上有人写了这么一句：\n```js\nthis.$el.empty();\n```\n\n然后我顺藤摸瓜看起了 backbone 的源代码：\n```js\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      _.extend(this, _.pick(options, viewOptions));\n      this._ensureElement();\n      this.initialize.apply(this, arguments);\n  };\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n      if (!this.el) {\n        // ...\n        // omit this because we pass 'el' as options to the View.\n        // ...\n      } else {\n          this.setElement(_.result(this, 'el'));\n      }\n  }\n\n  // Change the view's element (`this.el` property) and re-delegate the\n  // view's events on the new element.\n  setElement: function (element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n  }\n\n  // Creates the `this.el` and `this.$el` references for this view using the\n  // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n  // context or an element. Subclasses can override this to utilize an\n  // alternative DOM manipulation API and are only required to set the\n  // `this.el` property.\n  _setElement: function (el) {\n      this.$el = el instanceof Backbone.$\n               ? el\n               : Backbone.$(el);\n      this.el = this.$el[0];\n  }\n```\n\n上面这一段就是说，如果我们传入了 el 那么 backbone 会自动设置 $el（通过命名就能看出这是一个 jquery 对象咯）, 并且绑定我们在 events 定义的事件到这上面。\n\n然后还有 backbone 的 remove view 的方法：\n```js\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n      this._removeElement();\n      this.stopListening();\n      return this;\n  },\n\n  // Remove this view's element from the document and all event listeners\n  // attached to it. Exposed for subclasses using an alternative DOM\n  // manipulation API.\n  _removeElement: function () {\n      this.$el.remove();\n  }\n```\n\n解除事件监听，删掉元素。\n\n## 最终的 hide 方法\n\n于是，我模仿着写了一个 hide 方法：\n```js\n  hide: function () {\n      this.undelegateEvents();\n      this.$el.empty();\n      this.stopListening();\n  }\n```\n好像很简单，哈哈， 顺便把 appView 里面也改掉：\n```js\nif (this.siderView) {\n    this.siderView.hide();\n}\n\nif (!App.currentRouter || App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\nthis.siderView.render();\n```\n运行之后，切换 view 正常了。耶！\n\n然后我想让我的view 都具有 hide 这个方法，恰好 backbone 很好的面向对象，于是：\n```js\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n\n    var BaseView = Backbone.View.extend({\n\n        hide: function () {\n            this.undelegateEvents();\n            this.$el.empty();\n            this.stopListening();\n        }\n\n    });\n\n    return BaseView;\n\n});\n\n// how to use\nvar ChatSiderView = BaseView.extend({\n\n    el: '.left_aside',\n\n    //...\n});\n```\n\n感觉非常顺畅。\n\n## 后记\n频繁的删除dom元素，速度肯定是慢的，恰好我的网页很简单，所以看不出明显的缺点，网上也是推荐使用 `display：none` 和 `display：block` 来切换 view， 等我以后再研究吧。\n\n以上。\n","source":"_posts/baseview-in-backbone.md","raw":"title: Baseview in Backbone\ntags:\n  - backbone\n  - base\n  - view\ncategories:\n  - Backbone\ndate: 2015-11-13 00:36:15\n---\n## 前言\n今天研究了好久的 Backbone，一直搞不明白，怎么通过 router 的改变来切换 view。\n\n## 过程跌宕起伏\n\n事情是这样的，都知道 backbone 有 model, collection, view, router 这些基本概念，今天我要写一个简单的网页，有两个 nav 项，因为用了 backbone，自然就想到了单页应用，就是单击其中某一个的时候，显示这一个 nav 项对应的内容。\n\n这就用到了 router 的事件，每当 router 改变时，重新 render 整个页面。（我是这么想的，也不是整个，router 变了有些内容必然会跟着变。）\n\n```js\nvar appView = this;\nBackbone.history.on('route', function (router, name) {\n    console.log('current route:', name);\n    appView.render();\n});\n```\n\n另外，在 router 里面我定义了一个变量，用来表明哪一个 nav 项被点击。\n```js\nBackbone.Router.extend({\n\n    // ... other methods\n\n    routes: {\n        '': 'chat', // default to #chat\n        'chat': 'chat',\n        'broadcast': 'broadcast',\n        '*nothingMatched': 'pageNotFoundRoute' // 404\n    },\n\n    chat: function () {\n        console.log(\"chat page loaded.\");\n        window.App.currentRouter = 'chat';\n    },\n\n    broadcast: function () {\n        console.log('broadcast page loaded.');\n        window.App.currentRouter = 'broadcast';\n    },\n\n    pageNotFoundRoute: function() {\n        console.log('pageNotFoundRoute');\n    }\n\n});\n```\n\n事实证明，我的想法是有一点点正确的，因为运行顺序是这样的：\n```bash\nin appView initialize.\ndoctor-router.js:11 Route initialize\ndoctor-router.js:22 chat page loaded.    # 首先，进入 router 的处理方法\napp.js:31 current route: chat            # 然后，响应 router 的 change 事件\napp.js:58 in appView render.             # 最后，appView 的 render 方法根据 route name\n                                         # render对应的 view\n```\n\nrender 的时候，首先要 **remove** 当前的view，然后 render 新的view。我是这么写的：\n```js\nif (this.siderView) {\n    // 删掉当前的\n    this.siderView.remove();\n}\n\nif (App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\n// render 新的 view\nthis.siderView.render();\n```\n\n运行之后我发现，这样点击下一个 nav 的时候， view 变成了空白的。后来审查元素，发现 el 那个节点整个被删掉了，因为他们两个共同放在同一个 el 下面。\n```js\n// view 1\nvar DoctorProfileView = Backbone.View.extend({\n    el: '.left_aside',\n    className:  'doctor_profile'\n    // ...\n});\n\n// view 2\nvar ChatSiderView = BaseView.extend({\n    el: '.left_aside',\n    // ...\n});\n```\n\n因为是新手，而且这是第一次用 backbone，所以还不知道 $el 就是 juqery 对象（其实问题不在这里），所以我就开始了漫无目的的搜索。\n\n其实办法肯定是有的，就是让他俩不共用同一个 el 节点，每次 render 完了之后，添加到要显示的地方，remove 的时候也只会删掉他自己，况且还可以用 hide。\n\n## 有了一线希望\n\n终于，我看到网上有人写了这么一句：\n```js\nthis.$el.empty();\n```\n\n然后我顺藤摸瓜看起了 backbone 的源代码：\n```js\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      _.extend(this, _.pick(options, viewOptions));\n      this._ensureElement();\n      this.initialize.apply(this, arguments);\n  };\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n      if (!this.el) {\n        // ...\n        // omit this because we pass 'el' as options to the View.\n        // ...\n      } else {\n          this.setElement(_.result(this, 'el'));\n      }\n  }\n\n  // Change the view's element (`this.el` property) and re-delegate the\n  // view's events on the new element.\n  setElement: function (element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n  }\n\n  // Creates the `this.el` and `this.$el` references for this view using the\n  // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n  // context or an element. Subclasses can override this to utilize an\n  // alternative DOM manipulation API and are only required to set the\n  // `this.el` property.\n  _setElement: function (el) {\n      this.$el = el instanceof Backbone.$\n               ? el\n               : Backbone.$(el);\n      this.el = this.$el[0];\n  }\n```\n\n上面这一段就是说，如果我们传入了 el 那么 backbone 会自动设置 $el（通过命名就能看出这是一个 jquery 对象咯）, 并且绑定我们在 events 定义的事件到这上面。\n\n然后还有 backbone 的 remove view 的方法：\n```js\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n      this._removeElement();\n      this.stopListening();\n      return this;\n  },\n\n  // Remove this view's element from the document and all event listeners\n  // attached to it. Exposed for subclasses using an alternative DOM\n  // manipulation API.\n  _removeElement: function () {\n      this.$el.remove();\n  }\n```\n\n解除事件监听，删掉元素。\n\n## 最终的 hide 方法\n\n于是，我模仿着写了一个 hide 方法：\n```js\n  hide: function () {\n      this.undelegateEvents();\n      this.$el.empty();\n      this.stopListening();\n  }\n```\n好像很简单，哈哈， 顺便把 appView 里面也改掉：\n```js\nif (this.siderView) {\n    this.siderView.hide();\n}\n\nif (!App.currentRouter || App.currentRouter === 'chat') {\n    this.siderView = new ChatSiderView();\n} else if (App.currentRouter === 'broadcast') {\n    this.siderView = new DoctorProfileView();\n}\n\nthis.siderView.render();\n```\n运行之后，切换 view 正常了。耶！\n\n然后我想让我的view 都具有 hide 这个方法，恰好 backbone 很好的面向对象，于是：\n```js\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'backbone'\n], function ($, _, Backbone) {\n    'use strict';\n\n    var BaseView = Backbone.View.extend({\n\n        hide: function () {\n            this.undelegateEvents();\n            this.$el.empty();\n            this.stopListening();\n        }\n\n    });\n\n    return BaseView;\n\n});\n\n// how to use\nvar ChatSiderView = BaseView.extend({\n\n    el: '.left_aside',\n\n    //...\n});\n```\n\n感觉非常顺畅。\n\n## 后记\n频繁的删除dom元素，速度肯定是慢的，恰好我的网页很简单，所以看不出明显的缺点，网上也是推荐使用 `display：none` 和 `display：block` 来切换 view， 等我以后再研究吧。\n\n以上。\n","slug":"baseview-in-backbone","published":1,"updated":"2015-11-27T02:58:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1q0022egu3ga0knjwf"},{"title":"backbone router and view","date":"2015-12-16T08:04:54.000Z","_content":"","source":"_posts/backbone-router-and-view.md","raw":"title: backbone router and view\ntags:\n  - backbone\n  - router\n  - view\ncategories:\n  - Backbone\ndate: 2015-12-16 16:04:54\n---\n","slug":"backbone-router-and-view","published":1,"updated":"2015-12-16T08:08:42.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1t0029egu33dn8a2q7"},{"title":"underscore in action","_content":"underscore","source":"_drafts/underscore-in-action.md","raw":"title: underscore in action\ntags:\n  - underscore\n  - _\ncategories:\n  - Underscore\n---\nunderscore","slug":"underscore-in-action","published":0,"date":"2015-11-29T12:21:39.100Z","updated":"2015-11-29T12:21:39.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og1z002fegu3a6852lt6"},{"title":"hexo in action","_content":"Hexo","source":"_drafts/hexo-in-action.md","raw":"title: hexo in action\ntags:\n  - hexo\ncategories:\n  - Hexo\n---\nHexo","slug":"hexo-in-action","published":0,"date":"2015-11-29T12:21:42.434Z","updated":"2015-11-29T12:21:42.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og26002megu3bqmyqftt"},{"title":"git in action","_content":"\n# git 的工作流\n\n```sh\ngit-flow feature start cs_send_message_to_doctor\n```\n\n# branch\n\n# stash\n* git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\n* git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\n* git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\n* git stash clear: 清空Git栈。\n* git stash apply stash@{n}: 恢复到第 n 个\n\n### git stash apply 的例子\n```shell\n$ git stash list\nstash@{0}: WIP on master: e95dc37 Require administrator authority...\nstash@{1}: WIP on md_develop: fcaa18f Add an object to recieve md...\n\n$ git stash apply stash@{1}\n```\n\n> 而且，pop 出来的内容只是你上次 stash 时候的内容，在这之间，如果对stash的文件做了修改，`stash pop` 之后就没了。  \n\n> 所以在 `stash pop` 之前尽量`commit`一下，然后用 `cherry-pick` 来通过增量的方法将修复的内容合并到新版本上，如果有冲突需要手动解决。\n\n# fetch 和 pull 的区别\n\n# cherry-pick\n\n# revert 和 reset\n- git revert 是撤销某次操作，此次操作之前的commit都会被保留\n- git reset 是撤销某次提交，但是此次之后的修改都会被退回到暂存区","source":"_drafts/git-in-action.md","raw":"title: git in action\ntags:\n  - git\ncategories:\n  - GIT\n---\n\n# git 的工作流\n\n```sh\ngit-flow feature start cs_send_message_to_doctor\n```\n\n# branch\n\n# stash\n* git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。\n* git stash pop: 从Git栈中读取最近一次保存的内容，恢复工作区的相关内容。由于可能存在多个Stash的内容，所以用栈来管理，pop会从最近的一个stash中读取内容并恢复。\n* git stash list: 显示Git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。\n* git stash clear: 清空Git栈。\n* git stash apply stash@{n}: 恢复到第 n 个\n\n### git stash apply 的例子\n```shell\n$ git stash list\nstash@{0}: WIP on master: e95dc37 Require administrator authority...\nstash@{1}: WIP on md_develop: fcaa18f Add an object to recieve md...\n\n$ git stash apply stash@{1}\n```\n\n> 而且，pop 出来的内容只是你上次 stash 时候的内容，在这之间，如果对stash的文件做了修改，`stash pop` 之后就没了。  \n\n> 所以在 `stash pop` 之前尽量`commit`一下，然后用 `cherry-pick` 来通过增量的方法将修复的内容合并到新版本上，如果有冲突需要手动解决。\n\n# fetch 和 pull 的区别\n\n# cherry-pick\n\n# revert 和 reset\n- git revert 是撤销某次操作，此次操作之前的commit都会被保留\n- git reset 是撤销某次提交，但是此次之后的修改都会被退回到暂存区","slug":"git-in-action","published":0,"date":"2015-11-30T03:33:09.314Z","updated":"2015-11-30T03:33:09.314Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og2b002regu37oty3f38"},{"title":"backbone in action","_content":"backbone","source":"_drafts/backbone-in-action.md","raw":"title: backbone in action\ntags:\n  - backbone\ncategories:\n  - Backbone\n---\nbackbone","slug":"backbone-in-action","published":0,"date":"2015-11-29T12:21:07.750Z","updated":"2015-11-29T12:21:07.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciiy5og2d002uegu3ivpl1lrb"}],"PostAsset":[],"PostCategory":[{"post_id":"ciiy5ofzd0004egu3xb5jqzz3","category_id":"ciiy5ofzk0005egu37csr0bu7","_id":"ciiy5ofzp0008egu3sq9okkz5"},{"post_id":"ciiy5ofzt000begu3np8tf0f1","category_id":"ciiy5ofzv000cegu39wlh07k4","_id":"ciiy5ofzy000fegu3q27tgtqi"},{"post_id":"ciiy5og04000kegu3rish0da2","category_id":"ciiy5og05000legu3t9u3xkrq","_id":"ciiy5og07000oegu3hqotjk5s"},{"post_id":"ciiy5og0c000regu318wyseuy","category_id":"ciiy5ofzv000cegu39wlh07k4","_id":"ciiy5og0f000segu3tz58amvm"},{"post_id":"ciiy5og0l0011egu3oqs0kluh","category_id":"ciiy5og0m0012egu3m47lvjzc","_id":"ciiy5og0n0015egu3ath2b101"},{"post_id":"ciiy5og0s0016egu31aakuswq","category_id":"ciiy5ofzv000cegu39wlh07k4","_id":"ciiy5og0u0017egu34yej21a4"},{"post_id":"ciiy5og11001aegu34oum1zna","category_id":"ciiy5og13001begu3s4639xcg","_id":"ciiy5og14001eegu34kihpvog"},{"post_id":"ciiy5og1d001legu35pm5mxek","category_id":"ciiy5og05000legu3t9u3xkrq","_id":"ciiy5og1e001megu33x951xa4"},{"post_id":"ciiy5og1h001qegu3qbi5t8vf","category_id":"ciiy5og05000legu3t9u3xkrq","_id":"ciiy5og1j001regu3netje2lf"},{"post_id":"ciiy5og1m001vegu3dp18591w","category_id":"ciiy5og1n001wegu37og6vwkl","_id":"ciiy5og1o001zegu3t4m0k73l"},{"post_id":"ciiy5og1q0022egu3ga0knjwf","category_id":"ciiy5og0m0012egu3m47lvjzc","_id":"ciiy5og1r0023egu3zvl4jxzw"},{"post_id":"ciiy5og1t0029egu33dn8a2q7","category_id":"ciiy5og0m0012egu3m47lvjzc","_id":"ciiy5og1v002aegu37ay00oi2"},{"post_id":"ciiy5og1z002fegu3a6852lt6","category_id":"ciiy5og20002gegu3yastjamx","_id":"ciiy5og24002jegu3fd0llewv"},{"post_id":"ciiy5og26002megu3bqmyqftt","category_id":"ciiy5og28002negu3p2f3khd5","_id":"ciiy5og2a002qegu38i2e2u2x"},{"post_id":"ciiy5og2b002regu37oty3f38","category_id":"ciiy5og1n001wegu37og6vwkl","_id":"ciiy5og2c002segu3dp6j55mq"},{"post_id":"ciiy5og2d002uegu3ivpl1lrb","category_id":"ciiy5og0m0012egu3m47lvjzc","_id":"ciiy5og2e002vegu3hdv7vrjv"}],"PostTag":[{"post_id":"ciiy5ofzd0004egu3xb5jqzz3","tag_id":"ciiy5ofzl0006egu3kpxudkaq","_id":"ciiy5ofzq0009egu3jfgn0bpj"},{"post_id":"ciiy5ofzd0004egu3xb5jqzz3","tag_id":"ciiy5ofzo0007egu3bl230vgr","_id":"ciiy5ofzq000aegu30m7jyh7j"},{"post_id":"ciiy5ofzt000begu3np8tf0f1","tag_id":"ciiy5ofzw000degu364bx2gw8","_id":"ciiy5og00000hegu3o8cnyboa"},{"post_id":"ciiy5ofzt000begu3np8tf0f1","tag_id":"ciiy5ofzx000eegu3oy6nie7k","_id":"ciiy5og01000iegu3t11irk6o"},{"post_id":"ciiy5ofzt000begu3np8tf0f1","tag_id":"ciiy5ofzy000gegu301l34yog","_id":"ciiy5og01000jegu3c8t1jn0b"},{"post_id":"ciiy5og04000kegu3rish0da2","tag_id":"ciiy5og05000megu3eu10hko6","_id":"ciiy5og09000pegu36tzkbeth"},{"post_id":"ciiy5og04000kegu3rish0da2","tag_id":"ciiy5og06000negu3mfvwg366","_id":"ciiy5og09000qegu3b7gx043g"},{"post_id":"ciiy5og0c000regu318wyseuy","tag_id":"ciiy5og0f000tegu3qz4c78kf","_id":"ciiy5og0h000xegu3pmolkgeb"},{"post_id":"ciiy5og0c000regu318wyseuy","tag_id":"ciiy5og0g000uegu34tu7borh","_id":"ciiy5og0h000yegu3ypnfa8oy"},{"post_id":"ciiy5og0c000regu318wyseuy","tag_id":"ciiy5og0g000vegu3ogey92sg","_id":"ciiy5og0h000zegu3izh6d04b"},{"post_id":"ciiy5og0c000regu318wyseuy","tag_id":"ciiy5og0h000wegu3h7t6r56v","_id":"ciiy5og0h0010egu3ey0owk26"},{"post_id":"ciiy5og0l0011egu3oqs0kluh","tag_id":"ciiy5og0m0013egu3xi2n0hsj","_id":"ciiy5og0n0014egu3l2jdmkha"},{"post_id":"ciiy5og0s0016egu31aakuswq","tag_id":"ciiy5og0u0018egu3cbxhth4u","_id":"ciiy5og0v0019egu3jiaof2hm"},{"post_id":"ciiy5og11001aegu34oum1zna","tag_id":"ciiy5og13001cegu3k69mpjtj","_id":"ciiy5og18001hegu3t59jhbrm"},{"post_id":"ciiy5og11001aegu34oum1zna","tag_id":"ciiy5og14001degu3mfl43td9","_id":"ciiy5og19001iegu3xi0o2v7r"},{"post_id":"ciiy5og11001aegu34oum1zna","tag_id":"ciiy5og16001fegu3kn7tltf4","_id":"ciiy5og1a001jegu333rwz6o0"},{"post_id":"ciiy5og11001aegu34oum1zna","tag_id":"ciiy5og16001gegu3xsgadi97","_id":"ciiy5og1a001kegu3r23wxit0"},{"post_id":"ciiy5og1d001legu35pm5mxek","tag_id":"ciiy5og05000megu3eu10hko6","_id":"ciiy5og1f001oegu3oza1tmi5"},{"post_id":"ciiy5og1d001legu35pm5mxek","tag_id":"ciiy5og1f001negu3rejtq3if","_id":"ciiy5og1g001pegu370pjnp1y"},{"post_id":"ciiy5og1h001qegu3qbi5t8vf","tag_id":"ciiy5og05000megu3eu10hko6","_id":"ciiy5og1j001tegu37wt09wjn"},{"post_id":"ciiy5og1h001qegu3qbi5t8vf","tag_id":"ciiy5og1j001segu3toqf76u9","_id":"ciiy5og1k001uegu34jlfu24j"},{"post_id":"ciiy5og1m001vegu3dp18591w","tag_id":"ciiy5og1n001xegu3sl23gbkf","_id":"ciiy5og1p0020egu3et41qatr"},{"post_id":"ciiy5og1m001vegu3dp18591w","tag_id":"ciiy5og1o001yegu3gpf0y95m","_id":"ciiy5og1p0021egu3e255ioow"},{"post_id":"ciiy5og1q0022egu3ga0knjwf","tag_id":"ciiy5og0m0013egu3xi2n0hsj","_id":"ciiy5og1s0026egu38r51zz77"},{"post_id":"ciiy5og1q0022egu3ga0knjwf","tag_id":"ciiy5og1r0024egu3wqtetchm","_id":"ciiy5og1s0027egu3sc484r6h"},{"post_id":"ciiy5og1q0022egu3ga0knjwf","tag_id":"ciiy5og1s0025egu31n5g3gl7","_id":"ciiy5og1s0028egu3mbzo5fsz"},{"post_id":"ciiy5og1t0029egu33dn8a2q7","tag_id":"ciiy5og0m0013egu3xi2n0hsj","_id":"ciiy5og1x002cegu3y2mq00sr"},{"post_id":"ciiy5og1t0029egu33dn8a2q7","tag_id":"ciiy5og1w002begu3ndm0e23l","_id":"ciiy5og1x002degu39jhehm9r"},{"post_id":"ciiy5og1t0029egu33dn8a2q7","tag_id":"ciiy5og1s0025egu31n5g3gl7","_id":"ciiy5og1x002eegu3v81oq559"},{"post_id":"ciiy5og1z002fegu3a6852lt6","tag_id":"ciiy5og21002hegu3zhasvyiu","_id":"ciiy5og24002kegu3yo7c7i0m"},{"post_id":"ciiy5og1z002fegu3a6852lt6","tag_id":"ciiy5og23002iegu38qwewyua","_id":"ciiy5og25002legu3p548u8nb"},{"post_id":"ciiy5og26002megu3bqmyqftt","tag_id":"ciiy5og29002oegu3fv1bel4s","_id":"ciiy5og29002pegu3jtkwe98k"},{"post_id":"ciiy5og2b002regu37oty3f38","tag_id":"ciiy5og1n001xegu3sl23gbkf","_id":"ciiy5og2c002tegu3ccqd4elz"},{"post_id":"ciiy5og2d002uegu3ivpl1lrb","tag_id":"ciiy5og0m0013egu3xi2n0hsj","_id":"ciiy5og2e002wegu39hz4jqad"}],"Tag":[{"name":"html","_id":"ciiy5ofzl0006egu3kpxudkaq"},{"name":"css","_id":"ciiy5ofzo0007egu3bl230vgr"},{"name":"compatible module","_id":"ciiy5ofzw000degu364bx2gw8"},{"name":"AMD","_id":"ciiy5ofzx000eegu3oy6nie7k"},{"name":"CMD","_id":"ciiy5ofzy000gegu301l34yog"},{"name":"mysql","_id":"ciiy5og05000megu3eu10hko6"},{"name":"中文乱码","_id":"ciiy5og06000negu3mfvwg366"},{"name":"ts","_id":"ciiy5og0f000tegu3qz4c78kf"},{"name":"date","_id":"ciiy5og0g000uegu34tu7borh"},{"name":"format","_id":"ciiy5og0g000vegu3ogey92sg"},{"name":"js","_id":"ciiy5og0h000wegu3h7t6r56v"},{"name":"backbone","_id":"ciiy5og0m0013egu3xi2n0hsj"},{"name":"imgage error","_id":"ciiy5og0u0018egu3cbxhth4u"},{"name":"tedx","_id":"ciiy5og13001cegu3k69mpjtj"},{"name":"在网络暴力中捍卫自己","_id":"ciiy5og14001degu3mfl43td9"},{"name":"演讲稿","_id":"ciiy5og16001fegu3kn7tltf4"},{"name":"袁姗姗","_id":"ciiy5og16001gegu3xsgadi97"},{"name":"navicat","_id":"ciiy5og1f001negu3rejtq3if"},{"name":"paswword","_id":"ciiy5og1j001segu3toqf76u9"},{"name":"git","_id":"ciiy5og1n001xegu3sl23gbkf"},{"name":"记住密码","_id":"ciiy5og1o001yegu3gpf0y95m"},{"name":"base","_id":"ciiy5og1r0024egu3wqtetchm"},{"name":"view","_id":"ciiy5og1s0025egu31n5g3gl7"},{"name":"router","_id":"ciiy5og1w002begu3ndm0e23l"},{"name":"underscore","_id":"ciiy5og21002hegu3zhasvyiu"},{"name":"_","_id":"ciiy5og23002iegu38qwewyua"},{"name":"hexo","_id":"ciiy5og29002oegu3fv1bel4s"}]}}